/*
 * Copyright (C) 2005-2008 MaNGOS <http://www.mangosproject.org/>
 *
 * Copyright (C) 2008 Trinity <http://www.trinitycore.org/>
 *
 * Copyright (C) 2009-2010 TrinityZero <http://www.trinityzero.org/>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/** \file
    \ingroup u2w
*/

#include "Opcodes.h"
#include "Policies/SingletonImp.h"

INSTANTIATE_SINGLETON_1( Opcodes );

Opcodes::Opcodes()
{
    /// Build Opcodes map
    BuildOpcodeList();
}

Opcodes::~Opcodes()
{
    /// Clear Opcodes
    mOpcodeMap.clear();
}


void Opcodes::BuildOpcodeList()
{
  /// Correspondence between opcodes and their names
    StoreOpcode(MSG_NULL_ACTION                                                , "MSG_NULL_ACTION"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_BOOTME                                                    , "CMSG_BOOTME"                                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DBLOOKUP                                                  , "CMSG_DBLOOKUP"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_DBLOOKUP                                                  , "SMSG_DBLOOKUP"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUERY_OBJECT_POSITION                                     , "CMSG_QUERY_OBJECT_POSITION"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_QUERY_OBJECT_POSITION                                     , "SMSG_QUERY_OBJECT_POSITION"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUERY_OBJECT_ROTATION                                     , "CMSG_QUERY_OBJECT_ROTATION"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_QUERY_OBJECT_ROTATION                                     , "SMSG_QUERY_OBJECT_ROTATION"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_WORLD_TELEPORT                                            , "CMSG_WORLD_TELEPORT"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleWorldTeleportOpcode);
    StoreOpcode(CMSG_TELEPORT_TO_UNIT                                          , "CMSG_TELEPORT_TO_UNIT"                                           , STATUS_LOGGEDIN              , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ZONE_MAP                                                  , "CMSG_ZONE_MAP"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_ZONE_MAP                                                  , "SMSG_ZONE_MAP"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DEBUG_CHANGECELLZONE                                      , "CMSG_DEBUG_CHANGECELLZONE"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_EMBLAZON_TABARD_OBSOLETE                                  , "CMSG_EMBLAZON_TABARD_OBSOLETE"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_UNEMBLAZON_TABARD_OBSOLETE                                , "CMSG_UNEMBLAZON_TABARD_OBSOLETE"                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_RECHARGE                                                  , "CMSG_RECHARGE"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_LEARN_SPELL                                               , "CMSG_LEARN_SPELL"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CREATEMONSTER                                             , "CMSG_CREATEMONSTER"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DESTROYMONSTER                                            , "CMSG_DESTROYMONSTER"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CREATEITEM                                                , "CMSG_CREATEITEM"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CREATEGAMEOBJECT                                          , "CMSG_CREATEGAMEOBJECT"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CHECK_FOR_BOTS                                            , "SMSG_CHECK_FOR_BOTS"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MAKEMONSTERATTACKGUID                                     , "CMSG_MAKEMONSTERATTACKGUID"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_BOT_DETECTED2                                             , "CMSG_BOT_DETECTED2"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_FORCEACTION                                               , "CMSG_FORCEACTION"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_FORCEACTIONONOTHER                                        , "CMSG_FORCEACTIONONOTHER"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_FORCEACTIONSHOW                                           , "CMSG_FORCEACTIONSHOW"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_FORCEACTIONSHOW                                           , "SMSG_FORCEACTIONSHOW"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PETGODMODE                                                , "CMSG_PETGODMODE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_PETGODMODE                                                , "SMSG_PETGODMODE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DEBUGINFOSPELLMISS_OBSOLETE                               , "SMSG_DEBUGINFOSPELLMISS_OBSOLETE"                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_WEATHER_SPEED_CHEAT                                       , "CMSG_WEATHER_SPEED_CHEAT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_UNDRESSPLAYER                                             , "CMSG_UNDRESSPLAYER"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_BEASTMASTER                                               , "CMSG_BEASTMASTER"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GODMODE                                                   , "CMSG_GODMODE"                                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GODMODE                                                   , "SMSG_GODMODE"                                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHEAT_SETMONEY                                            , "CMSG_CHEAT_SETMONEY"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_LEVEL_CHEAT                                               , "CMSG_LEVEL_CHEAT"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_PET_LEVEL_CHEAT                                           , "CMSG_PET_LEVEL_CHEAT"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_WORLDSTATE                                            , "CMSG_SET_WORLDSTATE"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_COOLDOWN_CHEAT                                            , "CMSG_COOLDOWN_CHEAT"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_USE_SKILL_CHEAT                                           , "CMSG_USE_SKILL_CHEAT"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_FLAG_QUEST                                                , "CMSG_FLAG_QUEST"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_FLAG_QUEST_FINISH                                         , "CMSG_FLAG_QUEST_FINISH"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CLEAR_QUEST                                               , "CMSG_CLEAR_QUEST"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SEND_EVENT                                                , "CMSG_SEND_EVENT"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DEBUG_AISTATE                                             , "CMSG_DEBUG_AISTATE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_DEBUG_AISTATE                                             , "SMSG_DEBUG_AISTATE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DISABLE_PVP_CHEAT                                         , "CMSG_DISABLE_PVP_CHEAT"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ADVANCE_SPAWN_TIME                                        , "CMSG_ADVANCE_SPAWN_TIME"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_PVP_PORT_OBSOLETE                                         , "CMSG_PVP_PORT_OBSOLETE"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTH_SRP6_BEGIN                                           , "CMSG_AUTH_SRP6_BEGIN"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTH_SRP6_PROOF                                           , "CMSG_AUTH_SRP6_PROOF"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTH_SRP6_RECODE                                          , "CMSG_AUTH_SRP6_RECODE"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CHAR_CREATE                                               , "CMSG_CHAR_CREATE"                                                , STATUS_AUTHED                , &WorldSession::HandleCharCreateOpcode);
    StoreOpcode(CMSG_CHAR_ENUM                                                 , "CMSG_CHAR_ENUM"                                                  , STATUS_AUTHED                , &WorldSession::HandleCharEnumOpcode);
    StoreOpcode(CMSG_CHAR_DELETE                                               , "CMSG_CHAR_DELETE"                                                , STATUS_AUTHED                , &WorldSession::HandleCharDeleteOpcode);
    StoreOpcode(SMSG_AUTH_SRP6_RESPONSE                                        , "SMSG_AUTH_SRP6_RESPONSE"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHAR_CREATE                                               , "SMSG_CHAR_CREATE"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHAR_ENUM                                                 , "SMSG_CHAR_ENUM"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHAR_DELETE                                               , "SMSG_CHAR_DELETE"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PLAYER_LOGIN                                              , "CMSG_PLAYER_LOGIN"                                               , STATUS_AUTHED                , &WorldSession::HandlePlayerLoginOpcode);
    StoreOpcode(SMSG_NEW_WORLD                                                 , "SMSG_NEW_WORLD"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TRANSFER_PENDING                                          , "SMSG_TRANSFER_PENDING"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TRANSFER_ABORTED                                          , "SMSG_TRANSFER_ABORTED"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHARACTER_LOGIN_FAILED                                    , "SMSG_CHARACTER_LOGIN_FAILED"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOGIN_SETTIMESPEED                                        , "SMSG_LOGIN_SETTIMESPEED"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GAMETIME_UPDATE                                           , "SMSG_GAMETIME_UPDATE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GAMETIME_SET                                              , "CMSG_GAMETIME_SET"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GAMETIME_SET                                              , "SMSG_GAMETIME_SET"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GAMESPEED_SET                                             , "CMSG_GAMESPEED_SET"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GAMESPEED_SET                                             , "SMSG_GAMESPEED_SET"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SERVERTIME                                                , "CMSG_SERVERTIME"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SERVERTIME                                                , "SMSG_SERVERTIME"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PLAYER_LOGOUT                                             , "CMSG_PLAYER_LOGOUT"                                              , STATUS_LOGGEDIN              , &WorldSession::HandlePlayerLogoutOpcode);
    StoreOpcode(CMSG_LOGOUT_REQUEST                                            , "CMSG_LOGOUT_REQUEST"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleLogoutRequestOpcode);
    StoreOpcode(SMSG_LOGOUT_RESPONSE                                           , "SMSG_LOGOUT_RESPONSE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOGOUT_COMPLETE                                           , "SMSG_LOGOUT_COMPLETE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LOGOUT_CANCEL                                             , "CMSG_LOGOUT_CANCEL"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleLogoutCancelOpcode);
    StoreOpcode(SMSG_LOGOUT_CANCEL_ACK                                         , "SMSG_LOGOUT_CANCEL_ACK"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_NAME_QUERY                                                , "CMSG_NAME_QUERY"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleNameQueryOpcode);
    StoreOpcode(SMSG_NAME_QUERY_RESPONSE                                       , "SMSG_NAME_QUERY_RESPONSE"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PET_NAME_QUERY                                            , "CMSG_PET_NAME_QUERY"                                             , STATUS_LOGGEDIN              , &WorldSession::HandlePetNameQuery);
    StoreOpcode(SMSG_PET_NAME_QUERY_RESPONSE                                   , "SMSG_PET_NAME_QUERY_RESPONSE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_QUERY                                               , "CMSG_GUILD_QUERY"                                                , STATUS_AUTHED                , &WorldSession::HandleGuildQueryOpcode);
    StoreOpcode(SMSG_GUILD_QUERY_RESPONSE                                      , "SMSG_GUILD_QUERY_RESPONSE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ITEM_QUERY_SINGLE                                         , "CMSG_ITEM_QUERY_SINGLE"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleItemQuerySingleOpcode);
    StoreOpcode(CMSG_ITEM_QUERY_MULTIPLE                                       , "CMSG_ITEM_QUERY_MULTIPLE"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_ITEM_QUERY_SINGLE_RESPONSE                                , "SMSG_ITEM_QUERY_SINGLE_RESPONSE"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ITEM_QUERY_MULTIPLE_RESPONSE                              , "SMSG_ITEM_QUERY_MULTIPLE_RESPONSE"                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PAGE_TEXT_QUERY                                           , "CMSG_PAGE_TEXT_QUERY"                                            , STATUS_LOGGEDIN              , &WorldSession::HandlePageQueryOpcode);
    StoreOpcode(SMSG_PAGE_TEXT_QUERY_RESPONSE                                  , "SMSG_PAGE_TEXT_QUERY_RESPONSE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUEST_QUERY                                               , "CMSG_QUEST_QUERY"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleQuestQueryOpcode);
    StoreOpcode(SMSG_QUEST_QUERY_RESPONSE                                      , "SMSG_QUEST_QUERY_RESPONSE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GAMEOBJECT_QUERY                                          , "CMSG_GAMEOBJECT_QUERY"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleGameObjectQueryOpcode);
    StoreOpcode(SMSG_GAMEOBJECT_QUERY_RESPONSE                                 , "SMSG_GAMEOBJECT_QUERY_RESPONSE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CREATURE_QUERY                                            , "CMSG_CREATURE_QUERY"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleCreatureQueryOpcode);
    StoreOpcode(SMSG_CREATURE_QUERY_RESPONSE                                   , "SMSG_CREATURE_QUERY_RESPONSE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_WHO                                                       , "CMSG_WHO"                                                        , STATUS_LOGGEDIN              , &WorldSession::HandleWhoOpcode);
    StoreOpcode(SMSG_WHO                                                       , "SMSG_WHO"                                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_WHOIS                                                     , "CMSG_WHOIS"                                                      , STATUS_LOGGEDIN              , &WorldSession::HandleWhoisOpcode);
    StoreOpcode(SMSG_WHOIS                                                     , "SMSG_WHOIS"                                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CONTACT_LIST                                              , "CMSG_CONTACT_LIST"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleFriendListOpcode);
    StoreOpcode(SMSG_CONTACT_LIST                                              , "SMSG_CONTACT_LIST"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_FRIEND_STATUS                                             , "SMSG_FRIEND_STATUS"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ADD_FRIEND                                                , "CMSG_ADD_FRIEND"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleAddFriendOpcode);
    StoreOpcode(CMSG_DEL_FRIEND                                                , "CMSG_DEL_FRIEND"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleDelFriendOpcode);
    StoreOpcode(CMSG_SET_CONTACT_NOTES                                         , "CMSG_SET_CONTACT_NOTES"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleSetFriendNoteOpcode);
    StoreOpcode(CMSG_ADD_IGNORE                                                , "CMSG_ADD_IGNORE"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleAddIgnoreOpcode);
    StoreOpcode(CMSG_DEL_IGNORE                                                , "CMSG_DEL_IGNORE"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleDelIgnoreOpcode);
    StoreOpcode(CMSG_GROUP_INVITE                                              , "CMSG_GROUP_INVITE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGroupInviteOpcode);
    StoreOpcode(SMSG_GROUP_INVITE                                              , "SMSG_GROUP_INVITE"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GROUP_CANCEL                                              , "CMSG_GROUP_CANCEL"                                               , STATUS_LOGGEDIN              , &WorldSession::Handle_Deprecated);
    StoreOpcode(SMSG_GROUP_CANCEL                                              , "SMSG_GROUP_CANCEL"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GROUP_ACCEPT                                              , "CMSG_GROUP_ACCEPT"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGroupAcceptOpcode);
    StoreOpcode(CMSG_GROUP_DECLINE                                             , "CMSG_GROUP_DECLINE"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGroupDeclineOpcode);
    StoreOpcode(SMSG_GROUP_DECLINE                                             , "SMSG_GROUP_DECLINE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GROUP_UNINVITE                                            , "CMSG_GROUP_UNINVITE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleGroupUninviteNameOpcode);
    StoreOpcode(CMSG_GROUP_UNINVITE_GUID                                       , "CMSG_GROUP_UNINVITE_GUID"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleGroupUninviteGuidOpcode);
    StoreOpcode(SMSG_GROUP_UNINVITE                                            , "SMSG_GROUP_UNINVITE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GROUP_SET_LEADER                                          , "CMSG_GROUP_SET_LEADER"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleGroupSetLeaderOpcode);
    StoreOpcode(SMSG_GROUP_SET_LEADER                                          , "SMSG_GROUP_SET_LEADER"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LOOT_METHOD                                               , "CMSG_LOOT_METHOD"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleLootMethodOpcode);
    StoreOpcode(CMSG_GROUP_DISBAND                                             , "CMSG_GROUP_DISBAND"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGroupLeaveOpcode);
    StoreOpcode(SMSG_GROUP_DESTROYED                                           , "SMSG_GROUP_DESTROYED"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GROUP_LIST                                                , "SMSG_GROUP_LIST"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PARTY_MEMBER_STATS                                        , "SMSG_PARTY_MEMBER_STATS"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PARTY_COMMAND_RESULT                                      , "SMSG_PARTY_COMMAND_RESULT"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(UMSG_UPDATE_GROUP_MEMBERS                                      , "UMSG_UPDATE_GROUP_MEMBERS"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GUILD_CREATE                                              , "CMSG_GUILD_CREATE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildCreateOpcode);
    StoreOpcode(CMSG_GUILD_INVITE                                              , "CMSG_GUILD_INVITE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildInviteOpcode);
    StoreOpcode(SMSG_GUILD_INVITE                                              , "SMSG_GUILD_INVITE"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_ACCEPT                                              , "CMSG_GUILD_ACCEPT"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildAcceptOpcode);
    StoreOpcode(CMSG_GUILD_DECLINE                                             , "CMSG_GUILD_DECLINE"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGuildDeclineOpcode);
    StoreOpcode(SMSG_GUILD_DECLINE                                             , "SMSG_GUILD_DECLINE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_INFO                                                , "CMSG_GUILD_INFO"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleGuildInfoOpcode);
    StoreOpcode(SMSG_GUILD_INFO                                                , "SMSG_GUILD_INFO"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_ROSTER                                              , "CMSG_GUILD_ROSTER"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildRosterOpcode);
    StoreOpcode(SMSG_GUILD_ROSTER                                              , "SMSG_GUILD_ROSTER"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_PROMOTE                                             , "CMSG_GUILD_PROMOTE"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGuildPromoteOpcode);
    StoreOpcode(CMSG_GUILD_DEMOTE                                              , "CMSG_GUILD_DEMOTE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildDemoteOpcode);
    StoreOpcode(CMSG_GUILD_LEAVE                                               , "CMSG_GUILD_LEAVE"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleGuildLeaveOpcode);
    StoreOpcode(CMSG_GUILD_REMOVE                                              , "CMSG_GUILD_REMOVE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildRemoveOpcode);
    StoreOpcode(CMSG_GUILD_DISBAND                                             , "CMSG_GUILD_DISBAND"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGuildDisbandOpcode);
    StoreOpcode(CMSG_GUILD_LEADER                                              , "CMSG_GUILD_LEADER"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGuildLeaderOpcode);
    StoreOpcode(CMSG_GUILD_MOTD                                                , "CMSG_GUILD_MOTD"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleGuildMOTDOpcode);
    StoreOpcode(SMSG_GUILD_EVENT                                               , "SMSG_GUILD_EVENT"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GUILD_COMMAND_RESULT                                      , "SMSG_GUILD_COMMAND_RESULT"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(UMSG_UPDATE_GUILD                                              , "UMSG_UPDATE_GUILD"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MESSAGECHAT                                               , "CMSG_MESSAGECHAT"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleMessagechatOpcode);
    StoreOpcode(SMSG_MESSAGECHAT                                               , "SMSG_MESSAGECHAT"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_JOIN_CHANNEL                                              , "CMSG_JOIN_CHANNEL"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleChannelJoin);
    StoreOpcode(CMSG_LEAVE_CHANNEL                                             , "CMSG_LEAVE_CHANNEL"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleChannelLeave);
    StoreOpcode(SMSG_CHANNEL_NOTIFY                                            , "SMSG_CHANNEL_NOTIFY"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHANNEL_LIST                                              , "CMSG_CHANNEL_LIST"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleChannelList);
    StoreOpcode(SMSG_CHANNEL_LIST                                              , "SMSG_CHANNEL_LIST"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHANNEL_PASSWORD                                          , "CMSG_CHANNEL_PASSWORD"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleChannelPassword);
    StoreOpcode(CMSG_CHANNEL_SET_OWNER                                         , "CMSG_CHANNEL_SET_OWNER"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleChannelSetOwner);
    StoreOpcode(CMSG_CHANNEL_OWNER                                             , "CMSG_CHANNEL_OWNER"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleChannelOwner);
    StoreOpcode(CMSG_CHANNEL_MODERATOR                                         , "CMSG_CHANNEL_MODERATOR"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleChannelModerator);
    StoreOpcode(CMSG_CHANNEL_UNMODERATOR                                       , "CMSG_CHANNEL_UNMODERATOR"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleChannelUnmoderator);
    StoreOpcode(CMSG_CHANNEL_MUTE                                              , "CMSG_CHANNEL_MUTE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleChannelMute);
    StoreOpcode(CMSG_CHANNEL_UNMUTE                                            , "CMSG_CHANNEL_UNMUTE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleChannelUnmute);
    StoreOpcode(CMSG_CHANNEL_INVITE                                            , "CMSG_CHANNEL_INVITE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleChannelInvite);
    StoreOpcode(CMSG_CHANNEL_KICK                                              , "CMSG_CHANNEL_KICK"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleChannelKick);
    StoreOpcode(CMSG_CHANNEL_BAN                                               , "CMSG_CHANNEL_BAN"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleChannelBan);
    StoreOpcode(CMSG_CHANNEL_UNBAN                                             , "CMSG_CHANNEL_UNBAN"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleChannelUnban);
    StoreOpcode(CMSG_CHANNEL_ANNOUNCEMENTS                                     , "CMSG_CHANNEL_ANNOUNCEMENTS"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleChannelAnnounce);
    StoreOpcode(CMSG_CHANNEL_MODERATE                                          , "CMSG_CHANNEL_MODERATE"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleChannelModerate);
    StoreOpcode(SMSG_UPDATE_OBJECT                                             , "SMSG_UPDATE_OBJECT"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DESTROY_OBJECT                                            , "SMSG_DESTROY_OBJECT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_USE_ITEM                                                  , "CMSG_USE_ITEM"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleUseItemOpcode);
    StoreOpcode(CMSG_OPEN_ITEM                                                 , "CMSG_OPEN_ITEM"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleOpenItemOpcode);
    StoreOpcode(CMSG_READ_ITEM                                                 , "CMSG_READ_ITEM"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleReadItem);
    StoreOpcode(SMSG_READ_ITEM_OK                                              , "SMSG_READ_ITEM_OK"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_READ_ITEM_FAILED                                          , "SMSG_READ_ITEM_FAILED"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ITEM_COOLDOWN                                             , "SMSG_ITEM_COOLDOWN"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GAMEOBJ_USE                                               , "CMSG_GAMEOBJ_USE"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleGameObjectUseOpcode);
    StoreOpcode(CMSG_GAMEOBJ_CHAIR_USE_OBSOLETE                                , "CMSG_GAMEOBJ_CHAIR_USE_OBSOLETE"                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GAMEOBJECT_CUSTOM_ANIM                                    , "SMSG_GAMEOBJECT_CUSTOM_ANIM"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_AREATRIGGER                                               , "CMSG_AREATRIGGER"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleAreaTriggerOpcode);
    StoreOpcode(MSG_MOVE_START_FORWARD                                         , "MSG_MOVE_START_FORWARD"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_BACKWARD                                        , "MSG_MOVE_START_BACKWARD"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP                                                  , "MSG_MOVE_STOP"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_STRAFE_LEFT                                     , "MSG_MOVE_START_STRAFE_LEFT"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_STRAFE_RIGHT                                    , "MSG_MOVE_START_STRAFE_RIGHT"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP_STRAFE                                           , "MSG_MOVE_STOP_STRAFE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_JUMP                                                  , "MSG_MOVE_JUMP"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_TURN_LEFT                                       , "MSG_MOVE_START_TURN_LEFT"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_TURN_RIGHT                                      , "MSG_MOVE_START_TURN_RIGHT"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP_TURN                                             , "MSG_MOVE_STOP_TURN"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_PITCH_UP                                        , "MSG_MOVE_START_PITCH_UP"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_PITCH_DOWN                                      , "MSG_MOVE_START_PITCH_DOWN"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP_PITCH                                            , "MSG_MOVE_STOP_PITCH"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_SET_RUN_MODE                                          , "MSG_MOVE_SET_RUN_MODE"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_SET_WALK_MODE                                         , "MSG_MOVE_SET_WALK_MODE"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_TOGGLE_LOGGING                                        , "MSG_MOVE_TOGGLE_LOGGING"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_TELEPORT                                              , "MSG_MOVE_TELEPORT"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_TELEPORT_CHEAT                                        , "MSG_MOVE_TELEPORT_CHEAT"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_TELEPORT_ACK                                          , "MSG_MOVE_TELEPORT_ACK"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleMoveTeleportAck);
    StoreOpcode(MSG_MOVE_TOGGLE_FALL_LOGGING                                   , "MSG_MOVE_TOGGLE_FALL_LOGGING"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_FALL_LAND                                             , "MSG_MOVE_FALL_LAND"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_START_SWIM                                            , "MSG_MOVE_START_SWIM"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP_SWIM                                             , "MSG_MOVE_STOP_SWIM"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_SET_RUN_SPEED_CHEAT                                   , "MSG_MOVE_SET_RUN_SPEED_CHEAT"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_RUN_SPEED                                         , "MSG_MOVE_SET_RUN_SPEED"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_RUN_BACK_SPEED_CHEAT                              , "MSG_MOVE_SET_RUN_BACK_SPEED_CHEAT"                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_RUN_BACK_SPEED                                    , "MSG_MOVE_SET_RUN_BACK_SPEED"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_WALK_SPEED_CHEAT                                  , "MSG_MOVE_SET_WALK_SPEED_CHEAT"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_WALK_SPEED                                        , "MSG_MOVE_SET_WALK_SPEED"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_SWIM_SPEED_CHEAT                                  , "MSG_MOVE_SET_SWIM_SPEED_CHEAT"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_SWIM_SPEED                                        , "MSG_MOVE_SET_SWIM_SPEED"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_SWIM_BACK_SPEED_CHEAT                             , "MSG_MOVE_SET_SWIM_BACK_SPEED_CHEAT"                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_SWIM_BACK_SPEED                                   , "MSG_MOVE_SET_SWIM_BACK_SPEED"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_ALL_SPEED_CHEAT                                   , "MSG_MOVE_SET_ALL_SPEED_CHEAT"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_TURN_RATE_CHEAT                                   , "MSG_MOVE_SET_TURN_RATE_CHEAT"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_TURN_RATE                                         , "MSG_MOVE_SET_TURN_RATE"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_TOGGLE_COLLISION_CHEAT                                , "MSG_MOVE_TOGGLE_COLLISION_CHEAT"                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_SET_FACING                                            , "MSG_MOVE_SET_FACING"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_SET_PITCH                                             , "MSG_MOVE_SET_PITCH"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_WORLDPORT_ACK                                         , "MSG_MOVE_WORLDPORT_ACK"                                          , STATUS_TRANSFER_PENDING      , &WorldSession::HandleMoveWorldportAckOpcode);
    StoreOpcode(SMSG_MONSTER_MOVE                                              , "SMSG_MONSTER_MOVE"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MOVE_WATER_WALK                                           , "SMSG_MOVE_WATER_WALK"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MOVE_LAND_WALK                                            , "SMSG_MOVE_LAND_WALK"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MOVE_SET_RAW_POSITION_ACK                                  , "MSG_MOVE_SET_RAW_POSITION_ACK"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MOVE_SET_RAW_POSITION                                     , "CMSG_MOVE_SET_RAW_POSITION"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_FORCE_RUN_SPEED_CHANGE                                    , "SMSG_FORCE_RUN_SPEED_CHANGE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_RUN_SPEED_CHANGE_ACK                                , "CMSG_FORCE_RUN_SPEED_CHANGE_ACK"                                 , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(SMSG_FORCE_RUN_BACK_SPEED_CHANGE                               , "SMSG_FORCE_RUN_BACK_SPEED_CHANGE"                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_RUN_BACK_SPEED_CHANGE_ACK                           , "CMSG_FORCE_RUN_BACK_SPEED_CHANGE_ACK"                            , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(SMSG_FORCE_SWIM_SPEED_CHANGE                                   , "SMSG_FORCE_SWIM_SPEED_CHANGE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_SWIM_SPEED_CHANGE_ACK                               , "CMSG_FORCE_SWIM_SPEED_CHANGE_ACK"                                , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(SMSG_FORCE_MOVE_ROOT                                           , "SMSG_FORCE_MOVE_ROOT"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_MOVE_ROOT_ACK                                       , "CMSG_FORCE_MOVE_ROOT_ACK"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMoveRootAck);
    StoreOpcode(SMSG_FORCE_MOVE_UNROOT                                         , "SMSG_FORCE_MOVE_UNROOT"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_MOVE_UNROOT_ACK                                     , "CMSG_FORCE_MOVE_UNROOT_ACK"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleMoveUnRootAck);
    StoreOpcode(MSG_MOVE_ROOT                                                  , "MSG_MOVE_ROOT"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_UNROOT                                                , "MSG_MOVE_UNROOT"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_HEARTBEAT                                             , "MSG_MOVE_HEARTBEAT"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(SMSG_MOVE_KNOCK_BACK                                           , "SMSG_MOVE_KNOCK_BACK"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MOVE_KNOCK_BACK_ACK                                       , "CMSG_MOVE_KNOCK_BACK_ACK"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMoveKnockBackAck);
    StoreOpcode(MSG_MOVE_KNOCK_BACK                                            , "MSG_MOVE_KNOCK_BACK"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MOVE_FEATHER_FALL                                         , "SMSG_MOVE_FEATHER_FALL"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MOVE_NORMAL_FALL                                          , "SMSG_MOVE_NORMAL_FALL"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MOVE_SET_HOVER                                            , "SMSG_MOVE_SET_HOVER"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MOVE_UNSET_HOVER                                          , "SMSG_MOVE_UNSET_HOVER"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MOVE_HOVER_ACK                                            , "CMSG_MOVE_HOVER_ACK"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleMoveHoverAck);
    StoreOpcode(MSG_MOVE_HOVER                                                 , "MSG_MOVE_HOVER"                                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TRIGGER_CINEMATIC_CHEAT                                   , "CMSG_TRIGGER_CINEMATIC_CHEAT"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_OPENING_CINEMATIC                                         , "CMSG_OPENING_CINEMATIC"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_TRIGGER_CINEMATIC                                         , "SMSG_TRIGGER_CINEMATIC"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_NEXT_CINEMATIC_CAMERA                                     , "CMSG_NEXT_CINEMATIC_CAMERA"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleNextCinematicCamera);
    StoreOpcode(CMSG_COMPLETE_CINEMATIC                                        , "CMSG_COMPLETE_CINEMATIC"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleCompleteCinema);
    StoreOpcode(SMSG_TUTORIAL_FLAGS                                            , "SMSG_TUTORIAL_FLAGS"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TUTORIAL_FLAG                                             , "CMSG_TUTORIAL_FLAG"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleTutorialFlag);
    StoreOpcode(CMSG_TUTORIAL_CLEAR                                            , "CMSG_TUTORIAL_CLEAR"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleTutorialClear);
    StoreOpcode(CMSG_TUTORIAL_RESET                                            , "CMSG_TUTORIAL_RESET"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleTutorialReset);
    StoreOpcode(CMSG_STANDSTATECHANGE                                          , "CMSG_STANDSTATECHANGE"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleStandStateChangeOpcode);
    StoreOpcode(CMSG_EMOTE                                                     , "CMSG_EMOTE"                                                      , STATUS_LOGGEDIN              , &WorldSession::HandleEmoteOpcode);
    StoreOpcode(SMSG_EMOTE                                                     , "SMSG_EMOTE"                                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TEXT_EMOTE                                                , "CMSG_TEXT_EMOTE"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleTextEmoteOpcode);
    StoreOpcode(SMSG_TEXT_EMOTE                                                , "SMSG_TEXT_EMOTE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_AUTOEQUIP_GROUND_ITEM                                     , "CMSG_AUTOEQUIP_GROUND_ITEM"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTOSTORE_GROUND_ITEM                                     , "CMSG_AUTOSTORE_GROUND_ITEM"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTOSTORE_LOOT_ITEM                                       , "CMSG_AUTOSTORE_LOOT_ITEM"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleAutostoreLootItemOpcode);
    StoreOpcode(CMSG_STORE_LOOT_IN_SLOT                                        , "CMSG_STORE_LOOT_IN_SLOT"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTOEQUIP_ITEM                                            , "CMSG_AUTOEQUIP_ITEM"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleAutoEquipItemOpcode);
    StoreOpcode(CMSG_AUTOSTORE_BAG_ITEM                                        , "CMSG_AUTOSTORE_BAG_ITEM"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleAutoStoreBagItemOpcode);
    StoreOpcode(CMSG_SWAP_ITEM                                                 , "CMSG_SWAP_ITEM"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleSwapItem);
    StoreOpcode(CMSG_SWAP_INV_ITEM                                             , "CMSG_SWAP_INV_ITEM"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleSwapInvItemOpcode);
    StoreOpcode(CMSG_SPLIT_ITEM                                                , "CMSG_SPLIT_ITEM"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleSplitItemOpcode);
    StoreOpcode(CMSG_AUTOEQUIP_ITEM_SLOT                                       , "CMSG_AUTOEQUIP_ITEM_SLOT"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleAutoEquipItemSlotOpcode);
    StoreOpcode(OBSOLETE_DROP_ITEM                                             , "OBSOLETE_DROP_ITEM"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DESTROYITEM                                               , "CMSG_DESTROYITEM"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleDestroyItemOpcode);
    StoreOpcode(SMSG_INVENTORY_CHANGE_FAILURE                                  , "SMSG_INVENTORY_CHANGE_FAILURE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_OPEN_CONTAINER                                            , "SMSG_OPEN_CONTAINER"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_INSPECT                                                   , "CMSG_INSPECT"                                                    , STATUS_LOGGEDIN              , &WorldSession::HandleInspectOpcode);
    StoreOpcode(SMSG_INSPECT                                                   , "SMSG_INSPECT"                                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_INITIATE_TRADE                                            , "CMSG_INITIATE_TRADE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleInitiateTradeOpcode);
    StoreOpcode(CMSG_BEGIN_TRADE                                               , "CMSG_BEGIN_TRADE"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleBeginTradeOpcode);
    StoreOpcode(CMSG_BUSY_TRADE                                                , "CMSG_BUSY_TRADE"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleBusyTradeOpcode);
    StoreOpcode(CMSG_IGNORE_TRADE                                              , "CMSG_IGNORE_TRADE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleIgnoreTradeOpcode);
    StoreOpcode(CMSG_ACCEPT_TRADE                                              , "CMSG_ACCEPT_TRADE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleAcceptTradeOpcode);
    StoreOpcode(CMSG_UNACCEPT_TRADE                                            , "CMSG_UNACCEPT_TRADE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleUnacceptTradeOpcode);
    StoreOpcode(CMSG_CANCEL_TRADE                                              , "CMSG_CANCEL_TRADE"                                               , STATUS_AUTHED                , &WorldSession::HandleCancelTradeOpcode);
    StoreOpcode(CMSG_SET_TRADE_ITEM                                            , "CMSG_SET_TRADE_ITEM"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleSetTradeItemOpcode);
    StoreOpcode(CMSG_CLEAR_TRADE_ITEM                                          , "CMSG_CLEAR_TRADE_ITEM"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleClearTradeItemOpcode);
    StoreOpcode(CMSG_SET_TRADE_GOLD                                            , "CMSG_SET_TRADE_GOLD"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleSetTradeGoldOpcode);
    StoreOpcode(SMSG_TRADE_STATUS                                              , "SMSG_TRADE_STATUS"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TRADE_STATUS_EXTENDED                                     , "SMSG_TRADE_STATUS_EXTENDED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_INITIALIZE_FACTIONS                                       , "SMSG_INITIALIZE_FACTIONS"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_FACTION_VISIBLE                                       , "SMSG_SET_FACTION_VISIBLE"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_FACTION_STANDING                                      , "SMSG_SET_FACTION_STANDING"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_FACTION_ATWAR                                         , "CMSG_SET_FACTION_ATWAR"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleSetFactionAtWar);
    StoreOpcode(CMSG_SET_FACTION_CHEAT                                         , "CMSG_SET_FACTION_CHEAT"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleSetFactionCheat);
    StoreOpcode(SMSG_SET_PROFICIENCY                                           , "SMSG_SET_PROFICIENCY"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_ACTION_BUTTON                                         , "CMSG_SET_ACTION_BUTTON"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleSetActionButtonOpcode);
    StoreOpcode(SMSG_ACTION_BUTTONS                                            , "SMSG_ACTION_BUTTONS"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_INITIAL_SPELLS                                            , "SMSG_INITIAL_SPELLS"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LEARNED_SPELL                                             , "SMSG_LEARNED_SPELL"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SUPERCEDED_SPELL                                          , "SMSG_SUPERCEDED_SPELL"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_NEW_SPELL_SLOT                                            , "CMSG_NEW_SPELL_SLOT"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CAST_SPELL                                                , "CMSG_CAST_SPELL"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleCastSpellOpcode);
    StoreOpcode(CMSG_CANCEL_CAST                                               , "CMSG_CANCEL_CAST"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleCancelCastOpcode);
    StoreOpcode(SMSG_CAST_FAILED                                               , "SMSG_CAST_FAILED"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_START                                               , "SMSG_SPELL_START"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_GO                                                  , "SMSG_SPELL_GO"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_FAILURE                                             , "SMSG_SPELL_FAILURE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_COOLDOWN                                            , "SMSG_SPELL_COOLDOWN"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COOLDOWN_EVENT                                            , "SMSG_COOLDOWN_EVENT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CANCEL_AURA                                               , "CMSG_CANCEL_AURA"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleCancelAuraOpcode);
    StoreOpcode(SMSG_UPDATE_AURA_DURATION                                      , "SMSG_UPDATE_AURA_DURATION"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_CAST_FAILED                                           , "SMSG_PET_CAST_FAILED"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_CHANNEL_START                                              , "MSG_CHANNEL_START"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_CHANNEL_UPDATE                                             , "MSG_CHANNEL_UPDATE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CANCEL_CHANNELLING                                        , "CMSG_CANCEL_CHANNELLING"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleCancelChanneling);
    StoreOpcode(SMSG_AI_REACTION                                               , "SMSG_AI_REACTION"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_SELECTION                                             , "CMSG_SET_SELECTION"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleSetSelectionOpcode);
    StoreOpcode(CMSG_SET_TARGET_OBSOLETE                                       , "CMSG_SET_TARGET_OBSOLETE"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleSetTargetOpcode);
    StoreOpcode(CMSG_UNUSED                                                    , "CMSG_UNUSED"                                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_UNUSED2                                                   , "CMSG_UNUSED2"                                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ATTACKSWING                                               , "CMSG_ATTACKSWING"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleAttackSwingOpcode);
    StoreOpcode(CMSG_ATTACKSTOP                                                , "CMSG_ATTACKSTOP"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleAttackStopOpcode);
    StoreOpcode(SMSG_ATTACKSTART                                               , "SMSG_ATTACKSTART"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSTOP                                                , "SMSG_ATTACKSTOP"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSWING_NOTINRANGE                                    , "SMSG_ATTACKSWING_NOTINRANGE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSWING_BADFACING                                     , "SMSG_ATTACKSWING_BADFACING"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSWING_NOTSTANDING                                   , "SMSG_ATTACKSWING_NOTSTANDING"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSWING_DEADTARGET                                    , "SMSG_ATTACKSWING_DEADTARGET"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKSWING_CANT_ATTACK                                   , "SMSG_ATTACKSWING_CANT_ATTACK"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ATTACKERSTATEUPDATE                                       , "SMSG_ATTACKERSTATEUPDATE"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_VICTIMSTATEUPDATE_OBSOLETE                                , "SMSG_VICTIMSTATEUPDATE_OBSOLETE"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DAMAGE_DONE_OBSOLETE                                      , "SMSG_DAMAGE_DONE_OBSOLETE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DAMAGE_TAKEN_OBSOLETE                                     , "SMSG_DAMAGE_TAKEN_OBSOLETE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CANCEL_COMBAT                                             , "SMSG_CANCEL_COMBAT"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAYER_COMBAT_XP_GAIN_OBSOLETE                            , "SMSG_PLAYER_COMBAT_XP_GAIN_OBSOLETE"                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLHEALLOG                                              , "SMSG_SPELLHEALLOG"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLENERGIZELOG                                          , "SMSG_SPELLENERGIZELOG"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SHEATHE_OBSOLETE                                          , "CMSG_SHEATHE_OBSOLETE"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SAVE_PLAYER                                               , "CMSG_SAVE_PLAYER"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SETDEATHBINDPOINT                                         , "CMSG_SETDEATHBINDPOINT"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_BINDPOINTUPDATE                                           , "SMSG_BINDPOINTUPDATE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GETDEATHBINDZONE                                          , "CMSG_GETDEATHBINDZONE"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_BINDZONEREPLY                                             , "SMSG_BINDZONEREPLY"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAYERBOUND                                               , "SMSG_PLAYERBOUND"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CLIENT_CONTROL_UPDATE                                     , "SMSG_CLIENT_CONTROL_UPDATE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REPOP_REQUEST                                             , "CMSG_REPOP_REQUEST"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleRepopRequestOpcode);
    StoreOpcode(SMSG_RESURRECT_REQUEST                                         , "SMSG_RESURRECT_REQUEST"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_RESURRECT_RESPONSE                                        , "CMSG_RESURRECT_RESPONSE"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleResurrectResponseOpcode);
    StoreOpcode(CMSG_LOOT                                                      , "CMSG_LOOT"                                                       , STATUS_LOGGEDIN              , &WorldSession::HandleLootOpcode);
    StoreOpcode(CMSG_LOOT_MONEY                                                , "CMSG_LOOT_MONEY"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleLootMoneyOpcode);
    StoreOpcode(CMSG_LOOT_RELEASE                                              , "CMSG_LOOT_RELEASE"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleLootReleaseOpcode);
    StoreOpcode(SMSG_LOOT_RESPONSE                                             , "SMSG_LOOT_RESPONSE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_RELEASE_RESPONSE                                     , "SMSG_LOOT_RELEASE_RESPONSE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_REMOVED                                              , "SMSG_LOOT_REMOVED"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_MONEY_NOTIFY                                         , "SMSG_LOOT_MONEY_NOTIFY"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_ITEM_NOTIFY                                          , "SMSG_LOOT_ITEM_NOTIFY"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_CLEAR_MONEY                                          , "SMSG_LOOT_CLEAR_MONEY"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ITEM_PUSH_RESULT                                          , "SMSG_ITEM_PUSH_RESULT"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_REQUESTED                                            , "SMSG_DUEL_REQUESTED"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_OUTOFBOUNDS                                          , "SMSG_DUEL_OUTOFBOUNDS"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_INBOUNDS                                             , "SMSG_DUEL_INBOUNDS"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_COMPLETE                                             , "SMSG_DUEL_COMPLETE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_WINNER                                               , "SMSG_DUEL_WINNER"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DUEL_ACCEPTED                                             , "CMSG_DUEL_ACCEPTED"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleDuelAcceptedOpcode);
    StoreOpcode(CMSG_DUEL_CANCELLED                                            , "CMSG_DUEL_CANCELLED"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleDuelCancelledOpcode);
    StoreOpcode(SMSG_MOUNTRESULT                                               , "SMSG_MOUNTRESULT"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DISMOUNTRESULT                                            , "SMSG_DISMOUNTRESULT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PUREMOUNT_CANCELLED_OBSOLETE                              , "SMSG_PUREMOUNT_CANCELLED_OBSOLETE"                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MOUNTSPECIAL_ANIM                                         , "CMSG_MOUNTSPECIAL_ANIM"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMountSpecialAnimOpcode);
    StoreOpcode(SMSG_MOUNTSPECIAL_ANIM                                         , "SMSG_MOUNTSPECIAL_ANIM"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_TAME_FAILURE                                          , "SMSG_PET_TAME_FAILURE"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PET_SET_ACTION                                            , "CMSG_PET_SET_ACTION"                                             , STATUS_LOGGEDIN              , &WorldSession::HandlePetSetAction);
    StoreOpcode(CMSG_PET_ACTION                                                , "CMSG_PET_ACTION"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandlePetAction);
    StoreOpcode(CMSG_PET_ABANDON                                               , "CMSG_PET_ABANDON"                                                , STATUS_LOGGEDIN              , &WorldSession::HandlePetAbandon);
    StoreOpcode(CMSG_PET_RENAME                                                , "CMSG_PET_RENAME"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandlePetRename);
    StoreOpcode(SMSG_PET_NAME_INVALID                                          , "SMSG_PET_NAME_INVALID"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_SPELLS                                                , "SMSG_PET_SPELLS"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_MODE                                                  , "SMSG_PET_MODE"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GOSSIP_HELLO                                              , "CMSG_GOSSIP_HELLO"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleGossipHelloOpcode);
    StoreOpcode(CMSG_GOSSIP_SELECT_OPTION                                      , "CMSG_GOSSIP_SELECT_OPTION"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleGossipSelectOptionOpcode);
    StoreOpcode(SMSG_GOSSIP_MESSAGE                                            , "SMSG_GOSSIP_MESSAGE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GOSSIP_COMPLETE                                           , "SMSG_GOSSIP_COMPLETE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_NPC_TEXT_QUERY                                            , "CMSG_NPC_TEXT_QUERY"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleNpcTextQueryOpcode);
    StoreOpcode(SMSG_NPC_TEXT_UPDATE                                           , "SMSG_NPC_TEXT_UPDATE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_NPC_WONT_TALK                                             , "SMSG_NPC_WONT_TALK"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_STATUS_QUERY                                   , "CMSG_QUESTGIVER_STATUS_QUERY"                                    , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverStatusQueryOpcode);
    StoreOpcode(SMSG_QUESTGIVER_STATUS                                         , "SMSG_QUESTGIVER_STATUS"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_HELLO                                          , "CMSG_QUESTGIVER_HELLO"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverHelloOpcode);
    StoreOpcode(SMSG_QUESTGIVER_QUEST_LIST                                     , "SMSG_QUESTGIVER_QUEST_LIST"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_QUERY_QUEST                                    , "CMSG_QUESTGIVER_QUERY_QUEST"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverQuestQueryOpcode);
    StoreOpcode(CMSG_QUESTGIVER_QUEST_AUTOLAUNCH                               , "CMSG_QUESTGIVER_QUEST_AUTOLAUNCH"                                , STATUS_LOGGEDIN              , &WorldSession::HandleQuestAutoLaunch);
    StoreOpcode(SMSG_QUESTGIVER_QUEST_DETAILS                                  , "SMSG_QUESTGIVER_QUEST_DETAILS"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_ACCEPT_QUEST                                   , "CMSG_QUESTGIVER_ACCEPT_QUEST"                                    , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverAcceptQuestOpcode);
    StoreOpcode(CMSG_QUESTGIVER_COMPLETE_QUEST                                 , "CMSG_QUESTGIVER_COMPLETE_QUEST"                                  , STATUS_LOGGEDIN              , &WorldSession::HandleQuestComplete);
    StoreOpcode(SMSG_QUESTGIVER_REQUEST_ITEMS                                  , "SMSG_QUESTGIVER_REQUEST_ITEMS"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_REQUEST_REWARD                                 , "CMSG_QUESTGIVER_REQUEST_REWARD"                                  , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverRequestRewardOpcode);
    StoreOpcode(SMSG_QUESTGIVER_OFFER_REWARD                                   , "SMSG_QUESTGIVER_OFFER_REWARD"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_CHOOSE_REWARD                                  , "CMSG_QUESTGIVER_CHOOSE_REWARD"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverChooseRewardOpcode);
    StoreOpcode(SMSG_QUESTGIVER_QUEST_INVALID                                  , "SMSG_QUESTGIVER_QUEST_INVALID"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTGIVER_CANCEL                                         , "CMSG_QUESTGIVER_CANCEL"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverCancel);
    StoreOpcode(SMSG_QUESTGIVER_QUEST_COMPLETE                                 , "SMSG_QUESTGIVER_QUEST_COMPLETE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTGIVER_QUEST_FAILED                                   , "SMSG_QUESTGIVER_QUEST_FAILED"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUESTLOG_SWAP_QUEST                                       , "CMSG_QUESTLOG_SWAP_QUEST"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleQuestLogSwapQuest);
    StoreOpcode(CMSG_QUESTLOG_REMOVE_QUEST                                     , "CMSG_QUESTLOG_REMOVE_QUEST"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleQuestLogRemoveQuest);
    StoreOpcode(SMSG_QUESTLOG_FULL                                             , "SMSG_QUESTLOG_FULL"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTUPDATE_FAILED                                        , "SMSG_QUESTUPDATE_FAILED"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTUPDATE_FAILEDTIMER                                   , "SMSG_QUESTUPDATE_FAILEDTIMER"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTUPDATE_COMPLETE                                      , "SMSG_QUESTUPDATE_COMPLETE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTUPDATE_ADD_KILL                                      , "SMSG_QUESTUPDATE_ADD_KILL"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_QUESTUPDATE_ADD_ITEM                                      , "SMSG_QUESTUPDATE_ADD_ITEM"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUEST_CONFIRM_ACCEPT                                      , "CMSG_QUEST_CONFIRM_ACCEPT"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleQuestConfirmAccept);
    StoreOpcode(SMSG_QUEST_CONFIRM_ACCEPT                                      , "SMSG_QUEST_CONFIRM_ACCEPT"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PUSHQUESTTOPARTY                                          , "CMSG_PUSHQUESTTOPARTY"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleQuestPushToParty);
    StoreOpcode(CMSG_LIST_INVENTORY                                            , "CMSG_LIST_INVENTORY"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleListInventoryOpcode);
    StoreOpcode(SMSG_LIST_INVENTORY                                            , "SMSG_LIST_INVENTORY"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SELL_ITEM                                                 , "CMSG_SELL_ITEM"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleSellItemOpcode);
    StoreOpcode(SMSG_SELL_ITEM                                                 , "SMSG_SELL_ITEM"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BUY_ITEM                                                  , "CMSG_BUY_ITEM"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleBuyItemOpcode);
    StoreOpcode(CMSG_BUY_ITEM_IN_SLOT                                          , "CMSG_BUY_ITEM_IN_SLOT"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleBuyItemInSlotOpcode);
    StoreOpcode(SMSG_BUY_ITEM                                                  , "SMSG_BUY_ITEM"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_BUY_FAILED                                                , "SMSG_BUY_FAILED"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TAXICLEARALLNODES                                         , "CMSG_TAXICLEARALLNODES"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TAXIENABLEALLNODES                                        , "CMSG_TAXIENABLEALLNODES"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TAXISHOWNODES                                             , "CMSG_TAXISHOWNODES"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SHOWTAXINODES                                             , "SMSG_SHOWTAXINODES"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TAXINODE_STATUS_QUERY                                     , "CMSG_TAXINODE_STATUS_QUERY"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleTaxiNodeStatusQueryOpcode);
    StoreOpcode(SMSG_TAXINODE_STATUS                                           , "SMSG_TAXINODE_STATUS"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TAXIQUERYAVAILABLENODES                                   , "CMSG_TAXIQUERYAVAILABLENODES"                                    , STATUS_LOGGEDIN              , &WorldSession::HandleTaxiQueryAvailableNodesOpcode);
    StoreOpcode(CMSG_ACTIVATETAXI                                              , "CMSG_ACTIVATETAXI"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleActivateTaxiOpcode);
    StoreOpcode(SMSG_ACTIVATETAXIREPLY                                         , "SMSG_ACTIVATETAXIREPLY"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_NEW_TAXI_PATH                                             , "SMSG_NEW_TAXI_PATH"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TRAINER_LIST                                              , "CMSG_TRAINER_LIST"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleTrainerListOpcode);
    StoreOpcode(SMSG_TRAINER_LIST                                              , "SMSG_TRAINER_LIST"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TRAINER_BUY_SPELL                                         , "CMSG_TRAINER_BUY_SPELL"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleTrainerBuySpellOpcode);
    StoreOpcode(SMSG_TRAINER_BUY_SUCCEEDED                                     , "SMSG_TRAINER_BUY_SUCCEEDED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TRAINER_BUY_FAILED                                        , "SMSG_TRAINER_BUY_FAILED"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BINDER_ACTIVATE                                           , "CMSG_BINDER_ACTIVATE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleBinderActivateOpcode);
    StoreOpcode(SMSG_PLAYERBINDERROR                                           , "SMSG_PLAYERBINDERROR"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BANKER_ACTIVATE                                           , "CMSG_BANKER_ACTIVATE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleBankerActivateOpcode);
    StoreOpcode(SMSG_SHOW_BANK                                                 , "SMSG_SHOW_BANK"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BUY_BANK_SLOT                                             , "CMSG_BUY_BANK_SLOT"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleBuyBankSlotOpcode);
    StoreOpcode(SMSG_BUY_BANK_SLOT_RESULT                                      , "SMSG_BUY_BANK_SLOT_RESULT"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PETITION_SHOWLIST                                         , "CMSG_PETITION_SHOWLIST"                                          , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionShowListOpcode);
    StoreOpcode(SMSG_PETITION_SHOWLIST                                         , "SMSG_PETITION_SHOWLIST"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PETITION_BUY                                              , "CMSG_PETITION_BUY"                                               , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionBuyOpcode);
    StoreOpcode(CMSG_PETITION_SHOW_SIGNATURES                                  , "CMSG_PETITION_SHOW_SIGNATURES"                                   , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionShowSignOpcode);
    StoreOpcode(SMSG_PETITION_SHOW_SIGNATURES                                  , "SMSG_PETITION_SHOW_SIGNATURES"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PETITION_SIGN                                             , "CMSG_PETITION_SIGN"                                              , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionSignOpcode);
    StoreOpcode(SMSG_PETITION_SIGN_RESULTS                                     , "SMSG_PETITION_SIGN_RESULTS"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_PETITION_DECLINE                                           , "MSG_PETITION_DECLINE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionDeclineOpcode);
    StoreOpcode(CMSG_OFFER_PETITION                                            , "CMSG_OFFER_PETITION"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleOfferPetitionOpcode);
    StoreOpcode(CMSG_TURN_IN_PETITION                                          , "CMSG_TURN_IN_PETITION"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleTurnInPetitionOpcode);
    StoreOpcode(SMSG_TURN_IN_PETITION_RESULTS                                  , "SMSG_TURN_IN_PETITION_RESULTS"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PETITION_QUERY                                            , "CMSG_PETITION_QUERY"                                             , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionQueryOpcode);
    StoreOpcode(SMSG_PETITION_QUERY_RESPONSE                                   , "SMSG_PETITION_QUERY_RESPONSE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_FISH_NOT_HOOKED                                           , "SMSG_FISH_NOT_HOOKED"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_FISH_ESCAPED                                              , "SMSG_FISH_ESCAPED"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BUG                                                       , "CMSG_BUG"                                                        , STATUS_LOGGEDIN              , &WorldSession::HandleBugOpcode);
    StoreOpcode(SMSG_NOTIFICATION                                              , "SMSG_NOTIFICATION"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PLAYED_TIME                                               , "CMSG_PLAYED_TIME"                                                , STATUS_LOGGEDIN              , &WorldSession::HandlePlayedTime);
    StoreOpcode(SMSG_PLAYED_TIME                                               , "SMSG_PLAYED_TIME"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUERY_TIME                                                , "CMSG_QUERY_TIME"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleQueryTimeOpcode);
    StoreOpcode(SMSG_QUERY_TIME_RESPONSE                                       , "SMSG_QUERY_TIME_RESPONSE"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOG_XPGAIN                                                , "SMSG_LOG_XPGAIN"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AURACASTLOG                                               , "SMSG_AURACASTLOG"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_RECLAIM_CORPSE                                            , "CMSG_RECLAIM_CORPSE"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleCorpseReclaimOpcode);
    StoreOpcode(CMSG_WRAP_ITEM                                                 , "CMSG_WRAP_ITEM"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleWrapItemOpcode);
    StoreOpcode(SMSG_LEVELUP_INFO                                              , "SMSG_LEVELUP_INFO"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MINIMAP_PING                                               , "MSG_MINIMAP_PING"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleMinimapPingOpcode);
    StoreOpcode(SMSG_RESISTLOG                                                 , "SMSG_RESISTLOG"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ENCHANTMENTLOG                                            , "SMSG_ENCHANTMENTLOG"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_SKILL_CHEAT                                           , "CMSG_SET_SKILL_CHEAT"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_START_MIRROR_TIMER                                        , "SMSG_START_MIRROR_TIMER"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PAUSE_MIRROR_TIMER                                        , "SMSG_PAUSE_MIRROR_TIMER"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_STOP_MIRROR_TIMER                                         , "SMSG_STOP_MIRROR_TIMER"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PING                                                      , "CMSG_PING"                                                       , STATUS_NEVER                 , &WorldSession::Handle_EarlyProccess);
    StoreOpcode(SMSG_PONG                                                      , "SMSG_PONG"                                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CLEAR_COOLDOWN                                            , "SMSG_CLEAR_COOLDOWN"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GAMEOBJECT_PAGETEXT                                       , "SMSG_GAMEOBJECT_PAGETEXT"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SETSHEATHED                                               , "CMSG_SETSHEATHED"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleSetSheathedOpcode);
    StoreOpcode(SMSG_COOLDOWN_CHEAT                                            , "SMSG_COOLDOWN_CHEAT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_DELAYED                                             , "SMSG_SPELL_DELAYED"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PLAYER_MACRO_OBSOLETE                                     , "CMSG_PLAYER_MACRO_OBSOLETE"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_PLAYER_MACRO_OBSOLETE                                     , "SMSG_PLAYER_MACRO_OBSOLETE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GHOST                                                     , "CMSG_GHOST"                                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_INVIS                                                  , "CMSG_GM_INVIS"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_INVALID_PROMOTION_CODE                                    , "SMSG_INVALID_PROMOTION_CODE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_GM_BIND_OTHER                                              , "MSG_GM_BIND_OTHER"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_GM_SUMMON                                                  , "MSG_GM_SUMMON"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_ITEM_TIME_UPDATE                                          , "SMSG_ITEM_TIME_UPDATE"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ITEM_ENCHANT_TIME_UPDATE                                  , "SMSG_ITEM_ENCHANT_TIME_UPDATE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUTH_CHALLENGE                                            , "SMSG_AUTH_CHALLENGE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_AUTH_SESSION                                              , "CMSG_AUTH_SESSION"                                               , STATUS_NEVER                 , &WorldSession::Handle_EarlyProccess);
    StoreOpcode(SMSG_AUTH_RESPONSE                                             , "SMSG_AUTH_RESPONSE"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_GM_SHOWLABEL                                               , "MSG_GM_SHOWLABEL"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_PET_CAST_SPELL                                            , "CMSG_PET_CAST_SPELL"                                             , STATUS_LOGGEDIN              , &WorldSession::HandlePetCastSpellOpcode);
    StoreOpcode(MSG_SAVE_GUILD_EMBLEM                                          , "MSG_SAVE_GUILD_EMBLEM"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleGuildSaveEmblemOpcode);
    StoreOpcode(MSG_TABARDVENDOR_ACTIVATE                                      , "MSG_TABARDVENDOR_ACTIVATE"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleTabardVendorActivateOpcode);
    StoreOpcode(SMSG_PLAY_SPELL_VISUAL                                         , "SMSG_PLAY_SPELL_VISUAL"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ZONEUPDATE                                                , "CMSG_ZONEUPDATE"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleZoneUpdateOpcode);
    StoreOpcode(SMSG_PARTYKILLLOG                                              , "SMSG_PARTYKILLLOG"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COMPRESSED_UPDATE_OBJECT                                  , "SMSG_COMPRESSED_UPDATE_OBJECT"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAY_SPELL_IMPACT                                         , "SMSG_PLAY_SPELL_IMPACT"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_EXPLORATION_EXPERIENCE                                    , "SMSG_EXPLORATION_EXPERIENCE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_SET_SECURITY_GROUP                                     , "CMSG_GM_SET_SECURITY_GROUP"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_NUKE                                                   , "CMSG_GM_NUKE"                                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_RANDOM_ROLL                                                , "MSG_RANDOM_ROLL"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleRandomRollOpcode);
    StoreOpcode(SMSG_ENVIRONMENTALDAMAGELOG                                    , "SMSG_ENVIRONMENTALDAMAGELOG"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_RWHOIS_OBSOLETE                                           , "CMSG_RWHOIS_OBSOLETE"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_RWHOIS                                                    , "SMSG_RWHOIS"                                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_LOOKING_FOR_GROUP                                          , "MSG_LOOKING_FOR_GROUP"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleLookingForGroup);
    StoreOpcode(CMSG_SET_LOOKING_FOR_GROUP                                     , "CMSG_SET_LOOKING_FOR_GROUP"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleSetLfgOpcode);
    StoreOpcode(CMSG_UNLEARN_SPELL                                             , "CMSG_UNLEARN_SPELL"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_UNLEARN_SKILL                                             , "CMSG_UNLEARN_SKILL"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleUnlearnSkillOpcode);
    StoreOpcode(SMSG_REMOVED_SPELL                                             , "SMSG_REMOVED_SPELL"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DECHARGE                                                  , "CMSG_DECHARGE"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GMTICKET_CREATE                                           , "CMSG_GMTICKET_CREATE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleGMTicketCreateOpcode);
    StoreOpcode(SMSG_GMTICKET_CREATE                                           , "SMSG_GMTICKET_CREATE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GMTICKET_UPDATETEXT                                       , "CMSG_GMTICKET_UPDATETEXT"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleGMTicketUpdateOpcode);
    StoreOpcode(SMSG_GMTICKET_UPDATETEXT                                       , "SMSG_GMTICKET_UPDATETEXT"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ACCOUNT_DATA_TIMES                                        , "SMSG_ACCOUNT_DATA_TIMES"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REQUEST_ACCOUNT_DATA                                      , "CMSG_REQUEST_ACCOUNT_DATA"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleRequestAccountData);
    StoreOpcode(CMSG_UPDATE_ACCOUNT_DATA                                       , "CMSG_UPDATE_ACCOUNT_DATA"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleUpdateAccountData);
    StoreOpcode(SMSG_UPDATE_ACCOUNT_DATA                                       , "SMSG_UPDATE_ACCOUNT_DATA"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CLEAR_FAR_SIGHT_IMMEDIATE                                 , "SMSG_CLEAR_FAR_SIGHT_IMMEDIATE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_POWERGAINLOG_OBSOLETE                                     , "SMSG_POWERGAINLOG_OBSOLETE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_TEACH                                                  , "CMSG_GM_TEACH"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_CREATE_ITEM_TARGET                                     , "CMSG_GM_CREATE_ITEM_TARGET"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GMTICKET_GETTICKET                                        , "CMSG_GMTICKET_GETTICKET"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleGMTicketGetTicketOpcode);
    StoreOpcode(SMSG_GMTICKET_GETTICKET                                        , "SMSG_GMTICKET_GETTICKET"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_UNLEARN_TALENTS                                           , "CMSG_UNLEARN_TALENTS"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GAMEOBJECT_SPAWN_ANIM_OBSOLETE                            , "SMSG_GAMEOBJECT_SPAWN_ANIM_OBSOLETE"                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GAMEOBJECT_DESPAWN_ANIM                                   , "SMSG_GAMEOBJECT_DESPAWN_ANIM"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_CORPSE_QUERY                                               , "MSG_CORPSE_QUERY"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleCorpseQueryOpcode);
    StoreOpcode(CMSG_GMTICKET_DELETETICKET                                     , "CMSG_GMTICKET_DELETETICKET"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleGMTicketDeleteOpcode);
    StoreOpcode(SMSG_GMTICKET_DELETETICKET                                     , "SMSG_GMTICKET_DELETETICKET"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHAT_WRONG_FACTION                                        , "SMSG_CHAT_WRONG_FACTION"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GMTICKET_SYSTEMSTATUS                                     , "CMSG_GMTICKET_SYSTEMSTATUS"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleGMTicketSystemStatusOpcode);
    StoreOpcode(SMSG_GMTICKET_SYSTEMSTATUS                                     , "SMSG_GMTICKET_SYSTEMSTATUS"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SPIRIT_HEALER_ACTIVATE                                    , "CMSG_SPIRIT_HEALER_ACTIVATE"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleSpiritHealerActivateOpcode);
    StoreOpcode(CMSG_SET_STAT_CHEAT                                            , "CMSG_SET_STAT_CHEAT"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SET_REST_START                                            , "SMSG_SET_REST_START"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SKILL_BUY_STEP                                            , "CMSG_SKILL_BUY_STEP"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SKILL_BUY_RANK                                            , "CMSG_SKILL_BUY_RANK"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_XP_CHEAT                                                  , "CMSG_XP_CHEAT"                                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SPIRIT_HEALER_CONFIRM                                     , "SMSG_SPIRIT_HEALER_CONFIRM"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHARACTER_POINT_CHEAT                                     , "CMSG_CHARACTER_POINT_CHEAT"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GOSSIP_POI                                                , "SMSG_GOSSIP_POI"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHAT_IGNORED                                              , "CMSG_CHAT_IGNORED"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleChatIgnoredOpcode);
    StoreOpcode(CMSG_GM_VISION                                                 , "CMSG_GM_VISION"                                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SERVER_COMMAND                                            , "CMSG_SERVER_COMMAND"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_SILENCE                                                , "CMSG_GM_SILENCE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_REVEALTO                                               , "CMSG_GM_REVEALTO"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_RESURRECT                                              , "CMSG_GM_RESURRECT"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_SUMMONMOB                                              , "CMSG_GM_SUMMONMOB"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_MOVECORPSE                                             , "CMSG_GM_MOVECORPSE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_FREEZE                                                 , "CMSG_GM_FREEZE"                                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_UBERINVIS                                              , "CMSG_GM_UBERINVIS"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_REQUEST_PLAYER_INFO                                    , "CMSG_GM_REQUEST_PLAYER_INFO"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GM_PLAYER_INFO                                            , "SMSG_GM_PLAYER_INFO"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GUILD_RANK                                                , "CMSG_GUILD_RANK"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleGuildRankOpcode);
    StoreOpcode(CMSG_GUILD_ADD_RANK                                            , "CMSG_GUILD_ADD_RANK"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleGuildAddRankOpcode);
    StoreOpcode(CMSG_GUILD_DEL_RANK                                            , "CMSG_GUILD_DEL_RANK"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleGuildDelRankOpcode);
    StoreOpcode(CMSG_GUILD_SET_PUBLIC_NOTE                                     , "CMSG_GUILD_SET_PUBLIC_NOTE"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleGuildSetPublicNoteOpcode);
    StoreOpcode(CMSG_GUILD_SET_OFFICER_NOTE                                    , "CMSG_GUILD_SET_OFFICER_NOTE"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleGuildSetOfficerNoteOpcode);
    StoreOpcode(SMSG_LOGIN_VERIFY_WORLD                                        , "SMSG_LOGIN_VERIFY_WORLD"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CLEAR_EXPLORATION                                         , "CMSG_CLEAR_EXPLORATION"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SEND_MAIL                                                 , "CMSG_SEND_MAIL"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleSendMail);
    StoreOpcode(SMSG_SEND_MAIL_RESULT                                          , "SMSG_SEND_MAIL_RESULT"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GET_MAIL_LIST                                             , "CMSG_GET_MAIL_LIST"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleGetMail);
    StoreOpcode(SMSG_MAIL_LIST_RESULT                                          , "SMSG_MAIL_LIST_RESULT"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BATTLEFIELD_LIST                                          , "CMSG_BATTLEFIELD_LIST"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundListOpcode);
    StoreOpcode(SMSG_BATTLEFIELD_LIST                                          , "SMSG_BATTLEFIELD_LIST"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BATTLEFIELD_JOIN                                          , "CMSG_BATTLEFIELD_JOIN"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_BATTLEFIELD_WIN_OBSOLETE                                  , "SMSG_BATTLEFIELD_WIN_OBSOLETE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_BATTLEFIELD_LOSE_OBSOLETE                                 , "SMSG_BATTLEFIELD_LOSE_OBSOLETE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TAXICLEARNODE                                             , "CMSG_TAXICLEARNODE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TAXIENABLENODE                                            , "CMSG_TAXIENABLENODE"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ITEM_TEXT_QUERY                                           , "CMSG_ITEM_TEXT_QUERY"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleItemTextQuery);
    StoreOpcode(SMSG_ITEM_TEXT_QUERY_RESPONSE                                  , "SMSG_ITEM_TEXT_QUERY_RESPONSE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MAIL_TAKE_MONEY                                           , "CMSG_MAIL_TAKE_MONEY"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleTakeMoney);
    StoreOpcode(CMSG_MAIL_TAKE_ITEM                                            , "CMSG_MAIL_TAKE_ITEM"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleTakeItem);
    StoreOpcode(CMSG_MAIL_MARK_AS_READ                                         , "CMSG_MAIL_MARK_AS_READ"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMarkAsRead);
    StoreOpcode(CMSG_MAIL_RETURN_TO_SENDER                                     , "CMSG_MAIL_RETURN_TO_SENDER"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleReturnToSender);
    StoreOpcode(CMSG_MAIL_DELETE                                               , "CMSG_MAIL_DELETE"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleMailDelete);
    StoreOpcode(CMSG_MAIL_CREATE_TEXT_ITEM                                     , "CMSG_MAIL_CREATE_TEXT_ITEM"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleMailCreateTextItem);
    StoreOpcode(SMSG_SPELLLOGMISS                                              , "SMSG_SPELLLOGMISS"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLLOGEXECUTE                                           , "SMSG_SPELLLOGEXECUTE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DEBUGAURAPROC                                             , "SMSG_DEBUGAURAPROC"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PERIODICAURALOG                                           , "SMSG_PERIODICAURALOG"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLDAMAGESHIELD                                         , "SMSG_SPELLDAMAGESHIELD"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLNONMELEEDAMAGELOG                                    , "SMSG_SPELLNONMELEEDAMAGELOG"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LEARN_TALENT                                              , "CMSG_LEARN_TALENT"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleLearnTalentOpcode);
    StoreOpcode(SMSG_RESURRECT_FAILED                                          , "SMSG_RESURRECT_FAILED"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TOGGLE_PVP                                                , "CMSG_TOGGLE_PVP"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleTogglePvP);
    StoreOpcode(SMSG_ZONE_UNDER_ATTACK                                         , "SMSG_ZONE_UNDER_ATTACK"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_AUCTION_HELLO                                              , "MSG_AUCTION_HELLO"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionHelloOpcode);
    StoreOpcode(CMSG_AUCTION_SELL_ITEM                                         , "CMSG_AUCTION_SELL_ITEM"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionSellItem);
    StoreOpcode(CMSG_AUCTION_REMOVE_ITEM                                       , "CMSG_AUCTION_REMOVE_ITEM"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionRemoveItem);
    StoreOpcode(CMSG_AUCTION_LIST_ITEMS                                        , "CMSG_AUCTION_LIST_ITEMS"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionListItems);
    StoreOpcode(CMSG_AUCTION_LIST_OWNER_ITEMS                                  , "CMSG_AUCTION_LIST_OWNER_ITEMS"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionListOwnerItems);
    StoreOpcode(CMSG_AUCTION_PLACE_BID                                         , "CMSG_AUCTION_PLACE_BID"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionPlaceBid);
    StoreOpcode(SMSG_AUCTION_COMMAND_RESULT                                    , "SMSG_AUCTION_COMMAND_RESULT"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUCTION_LIST_RESULT                                       , "SMSG_AUCTION_LIST_RESULT"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUCTION_OWNER_LIST_RESULT                                 , "SMSG_AUCTION_OWNER_LIST_RESULT"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUCTION_BIDDER_NOTIFICATION                               , "SMSG_AUCTION_BIDDER_NOTIFICATION"                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUCTION_OWNER_NOTIFICATION                                , "SMSG_AUCTION_OWNER_NOTIFICATION"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PROCRESIST                                                , "SMSG_PROCRESIST"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_STANDSTATE_CHANGE_FAILURE_OBSOLETE                        , "SMSG_STANDSTATE_CHANGE_FAILURE_OBSOLETE"                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DISPEL_FAILED                                             , "SMSG_DISPEL_FAILED"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLORDAMAGE_IMMUNE                                      , "SMSG_SPELLORDAMAGE_IMMUNE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_AUCTION_LIST_BIDDER_ITEMS                                 , "CMSG_AUCTION_LIST_BIDDER_ITEMS"                                  , STATUS_LOGGEDIN              , &WorldSession::HandleAuctionListBidderItems);
    StoreOpcode(SMSG_AUCTION_BIDDER_LIST_RESULT                                , "SMSG_AUCTION_BIDDER_LIST_RESULT"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_FLAT_SPELL_MODIFIER                                   , "SMSG_SET_FLAT_SPELL_MODIFIER"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_PCT_SPELL_MODIFIER                                    , "SMSG_SET_PCT_SPELL_MODIFIER"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_AMMO                                                  , "CMSG_SET_AMMO"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleSetAmmoOpcode);
    StoreOpcode(SMSG_CORPSE_RECLAIM_DELAY                                      , "SMSG_CORPSE_RECLAIM_DELAY"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_ACTIVE_MOVER                                          , "CMSG_SET_ACTIVE_MOVER"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleSetActiveMoverOpcode);
    StoreOpcode(CMSG_PET_CANCEL_AURA                                           , "CMSG_PET_CANCEL_AURA"                                            , STATUS_LOGGEDIN              , &WorldSession::HandlePetCancelAuraOpcode);
    StoreOpcode(CMSG_PLAYER_AI_CHEAT                                           , "CMSG_PLAYER_AI_CHEAT"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CANCEL_AUTO_REPEAT_SPELL                                  , "CMSG_CANCEL_AUTO_REPEAT_SPELL"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleCancelAutoRepeatSpellOpcode);
    StoreOpcode(MSG_GM_ACCOUNT_ONLINE                                          , "MSG_GM_ACCOUNT_ONLINE"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_LIST_STABLED_PETS                                          , "MSG_LIST_STABLED_PETS"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleListStabledPetsOpcode);
    StoreOpcode(CMSG_STABLE_PET                                                , "CMSG_STABLE_PET"                                                 , STATUS_LOGGEDIN              , &WorldSession::HandleStablePet);
    StoreOpcode(CMSG_UNSTABLE_PET                                              , "CMSG_UNSTABLE_PET"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleUnstablePet);
    StoreOpcode(CMSG_BUY_STABLE_SLOT                                           , "CMSG_BUY_STABLE_SLOT"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleBuyStableSlot);
    StoreOpcode(SMSG_STABLE_RESULT                                             , "SMSG_STABLE_RESULT"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_STABLE_REVIVE_PET                                         , "CMSG_STABLE_REVIVE_PET"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleStableRevivePet);
    StoreOpcode(CMSG_STABLE_SWAP_PET                                           , "CMSG_STABLE_SWAP_PET"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleStableSwapPet);
    StoreOpcode(MSG_QUEST_PUSH_RESULT                                          , "MSG_QUEST_PUSH_RESULT"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleQuestPushResult);
    StoreOpcode(SMSG_PLAY_MUSIC                                                , "SMSG_PLAY_MUSIC"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAY_OBJECT_SOUND                                         , "SMSG_PLAY_OBJECT_SOUND"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REQUEST_PET_INFO                                          , "CMSG_REQUEST_PET_INFO"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleRequestPetInfoOpcode);
    StoreOpcode(CMSG_FAR_SIGHT                                                 , "CMSG_FAR_SIGHT"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleFarSightOpcode);
    StoreOpcode(SMSG_SPELLDISPELLOG                                            , "SMSG_SPELLDISPELLOG"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DAMAGE_CALC_LOG                                           , "SMSG_DAMAGE_CALC_LOG"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ENABLE_DAMAGE_LOG                                         , "CMSG_ENABLE_DAMAGE_LOG"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GROUP_CHANGE_SUB_GROUP                                    , "CMSG_GROUP_CHANGE_SUB_GROUP"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleGroupChangeSubGroupOpcode);
    StoreOpcode(CMSG_REQUEST_PARTY_MEMBER_STATS                                , "CMSG_REQUEST_PARTY_MEMBER_STATS"                                 , STATUS_LOGGEDIN              , &WorldSession::HandleRequestPartyMemberStatsOpcode);
    StoreOpcode(CMSG_GROUP_SWAP_SUB_GROUP                                      , "CMSG_GROUP_SWAP_SUB_GROUP"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_RESET_FACTION_CHEAT                                       , "CMSG_RESET_FACTION_CHEAT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_AUTOSTORE_BANK_ITEM                                       , "CMSG_AUTOSTORE_BANK_ITEM"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleAutoStoreBankItemOpcode);
    StoreOpcode(CMSG_AUTOBANK_ITEM                                             , "CMSG_AUTOBANK_ITEM"                                              , STATUS_LOGGEDIN              , &WorldSession::HandleAutoBankItemOpcode);
    StoreOpcode(MSG_QUERY_NEXT_MAIL_TIME                                       , "MSG_QUERY_NEXT_MAIL_TIME"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMsgQueryNextMailtime);
    StoreOpcode(SMSG_RECEIVED_MAIL                                             , "SMSG_RECEIVED_MAIL"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_RAID_GROUP_ONLY                                           , "SMSG_RAID_GROUP_ONLY"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_DURABILITY_CHEAT                                      , "CMSG_SET_DURABILITY_CHEAT"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_PVP_RANK_CHEAT                                        , "CMSG_SET_PVP_RANK_CHEAT"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ADD_PVP_MEDAL_CHEAT                                       , "CMSG_ADD_PVP_MEDAL_CHEAT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DEL_PVP_MEDAL_CHEAT                                       , "CMSG_DEL_PVP_MEDAL_CHEAT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_PVP_TITLE                                             , "CMSG_SET_PVP_TITLE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_PVP_CREDIT                                                , "SMSG_PVP_CREDIT"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AUCTION_REMOVED_NOTIFICATION                              , "SMSG_AUCTION_REMOVED_NOTIFICATION"                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GROUP_RAID_CONVERT                                        , "CMSG_GROUP_RAID_CONVERT"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleRaidConvertOpcode);
    StoreOpcode(CMSG_GROUP_ASSISTANT_LEADER                                    , "CMSG_GROUP_ASSISTANT_LEADER"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleGroupAssistantOpcode);
    StoreOpcode(CMSG_BUYBACK_ITEM                                              , "CMSG_BUYBACK_ITEM"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleBuybackItem);
    StoreOpcode(SMSG_SERVER_MESSAGE                                            , "SMSG_SERVER_MESSAGE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MEETINGSTONE_JOIN                                         , "CMSG_MEETINGSTONE_JOIN"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MEETINGSTONE_LEAVE                                        , "CMSG_MEETINGSTONE_LEAVE"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MEETINGSTONE_CHEAT                                        , "CMSG_MEETINGSTONE_CHEAT"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MEETINGSTONE_SETQUEUE                                     , "SMSG_MEETINGSTONE_SETQUEUE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MEETINGSTONE_INFO                                         , "CMSG_MEETINGSTONE_INFO"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMeetingStoneInfo);
    StoreOpcode(SMSG_MEETINGSTONE_COMPLETE                                     , "SMSG_MEETINGSTONE_COMPLETE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MEETINGSTONE_IN_PROGRESS                                  , "SMSG_MEETINGSTONE_IN_PROGRESS"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MEETINGSTONE_MEMBER_ADDED                                 , "SMSG_MEETINGSTONE_MEMBER_ADDED"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GMTICKETSYSTEM_TOGGLE                                     , "CMSG_GMTICKETSYSTEM_TOGGLE"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CANCEL_GROWTH_AURA                                        , "CMSG_CANCEL_GROWTH_AURA"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleCancelGrowthAuraOpcode);
    StoreOpcode(SMSG_CANCEL_AUTO_REPEAT                                        , "SMSG_CANCEL_AUTO_REPEAT"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_STANDSTATE_UPDATE                                         , "SMSG_STANDSTATE_UPDATE"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_ALL_PASSED                                           , "SMSG_LOOT_ALL_PASSED"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_ROLL_WON                                             , "SMSG_LOOT_ROLL_WON"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LOOT_ROLL                                                 , "CMSG_LOOT_ROLL"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleLootRoll);
    StoreOpcode(SMSG_LOOT_START_ROLL                                           , "SMSG_LOOT_START_ROLL"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LOOT_ROLL                                                 , "SMSG_LOOT_ROLL"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LOOT_MASTER_GIVE                                          , "CMSG_LOOT_MASTER_GIVE"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleLootMasterGiveOpcode);
    StoreOpcode(SMSG_LOOT_MASTER_LIST                                          , "SMSG_LOOT_MASTER_LIST"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_FORCED_REACTIONS                                      , "SMSG_SET_FORCED_REACTIONS"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_FAILED_OTHER                                        , "SMSG_SPELL_FAILED_OTHER"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GAMEOBJECT_RESET_STATE                                    , "SMSG_GAMEOBJECT_RESET_STATE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REPAIR_ITEM                                               , "CMSG_REPAIR_ITEM"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleRepairItemOpcode);
    StoreOpcode(SMSG_CHAT_PLAYER_NOT_FOUND                                     , "SMSG_CHAT_PLAYER_NOT_FOUND"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_TALENT_WIPE_CONFIRM                                        , "MSG_TALENT_WIPE_CONFIRM"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleTalentWipeOpcode);
    StoreOpcode(SMSG_SUMMON_REQUEST                                            , "SMSG_SUMMON_REQUEST"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SUMMON_RESPONSE                                           , "CMSG_SUMMON_RESPONSE"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleSummonResponseOpcode);
    StoreOpcode(MSG_MOVE_TOGGLE_GRAVITY_CHEAT                                  , "MSG_MOVE_TOGGLE_GRAVITY_CHEAT"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MONSTER_MOVE_TRANSPORT                                    , "SMSG_MONSTER_MOVE_TRANSPORT"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_BROKEN                                                , "SMSG_PET_BROKEN"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MOVE_FEATHER_FALL                                          , "MSG_MOVE_FEATHER_FALL"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_WATER_WALK                                            , "MSG_MOVE_WATER_WALK"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SERVER_BROADCAST                                          , "CMSG_SERVER_BROADCAST"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SELF_RES                                                  , "CMSG_SELF_RES"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleSelfResOpcode);
    StoreOpcode(SMSG_FEIGN_DEATH_RESISTED                                      , "SMSG_FEIGN_DEATH_RESISTED"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_RUN_SCRIPT                                                , "CMSG_RUN_SCRIPT"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SCRIPT_MESSAGE                                            , "SMSG_SCRIPT_MESSAGE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DUEL_COUNTDOWN                                            , "SMSG_DUEL_COUNTDOWN"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_AREA_TRIGGER_MESSAGE                                      , "SMSG_AREA_TRIGGER_MESSAGE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TOGGLE_HELM                                               , "CMSG_TOGGLE_HELM"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleToggleHelmOpcode);
    StoreOpcode(CMSG_TOGGLE_CLOAK                                              , "CMSG_TOGGLE_CLOAK"                                               , STATUS_LOGGEDIN              , &WorldSession::HandleToggleCloakOpcode);
    StoreOpcode(SMSG_MEETINGSTONE_JOINFAILED                                   , "SMSG_MEETINGSTONE_JOINFAILED"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAYER_SKINNED                                            , "SMSG_PLAYER_SKINNED"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DURABILITY_DAMAGE_DEATH                                   , "SMSG_DURABILITY_DAMAGE_DEATH"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_EXPLORATION                                           , "CMSG_SET_EXPLORATION"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_ACTIONBAR_TOGGLES                                     , "CMSG_SET_ACTIONBAR_TOGGLES"                                      , STATUS_AUTHED                , &WorldSession::HandleSetActionBar);
    StoreOpcode(UMSG_DELETE_GUILD_CHARTER                                      , "UMSG_DELETE_GUILD_CHARTER"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_PETITION_RENAME                                            , "MSG_PETITION_RENAME"                                             , STATUS_LOGGEDIN              , &WorldSession::HandlePetitionRenameOpcode);
    StoreOpcode(SMSG_INIT_WORLD_STATES                                         , "SMSG_INIT_WORLD_STATES"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_UPDATE_WORLD_STATE                                        , "SMSG_UPDATE_WORLD_STATE"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ITEM_NAME_QUERY                                           , "CMSG_ITEM_NAME_QUERY"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleItemNameQueryOpcode);
    StoreOpcode(SMSG_ITEM_NAME_QUERY_RESPONSE                                  , "SMSG_ITEM_NAME_QUERY_RESPONSE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_ACTION_FEEDBACK                                       , "SMSG_PET_ACTION_FEEDBACK"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHAR_RENAME                                               , "CMSG_CHAR_RENAME"                                                , STATUS_AUTHED                , &WorldSession::HandleChangePlayerNameOpcode);
    StoreOpcode(SMSG_CHAR_RENAME                                               , "SMSG_CHAR_RENAME"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MOVE_SPLINE_DONE                                          , "CMSG_MOVE_SPLINE_DONE"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleTaxiNextDestinationOpcode);
    StoreOpcode(CMSG_MOVE_FALL_RESET                                           , "CMSG_MOVE_FALL_RESET"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(SMSG_INSTANCE_SAVE_CREATED                                     , "SMSG_INSTANCE_SAVE_CREATED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_RAID_INSTANCE_INFO                                        , "SMSG_RAID_INSTANCE_INFO"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REQUEST_RAID_INFO                                         , "CMSG_REQUEST_RAID_INFO"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleRequestRaidInfoOpcode);
    StoreOpcode(CMSG_MOVE_TIME_SKIPPED                                         , "CMSG_MOVE_TIME_SKIPPED"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMoveTimeSkippedOpcode);
    StoreOpcode(CMSG_MOVE_FEATHER_FALL_ACK                                     , "CMSG_MOVE_FEATHER_FALL_ACK"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleFeatherFallAck);
    StoreOpcode(CMSG_MOVE_WATER_WALK_ACK                                       , "CMSG_MOVE_WATER_WALK_ACK"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMoveWaterWalkAck);
    StoreOpcode(CMSG_MOVE_NOT_ACTIVE_MOVER                                     , "CMSG_MOVE_NOT_ACTIVE_MOVER"                                      , STATUS_LOGGEDIN              , &WorldSession::HandleNotActiveMoverOpcode);
    StoreOpcode(SMSG_PLAY_SOUND                                                , "SMSG_PLAY_SOUND"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BATTLEFIELD_STATUS                                        , "CMSG_BATTLEFIELD_STATUS"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleBattlefieldStatusOpcode);
    StoreOpcode(SMSG_BATTLEFIELD_STATUS                                        , "SMSG_BATTLEFIELD_STATUS"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BATTLEFIELD_PORT                                          , "CMSG_BATTLEFIELD_PORT"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundPlayerPortOpcode);
    StoreOpcode(MSG_INSPECT_HONOR_STATS                                        , "MSG_INSPECT_HONOR_STATS"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleInspectHonorStatsOpcode);
    StoreOpcode(CMSG_BATTLEMASTER_HELLO                                        , "CMSG_BATTLEMASTER_HELLO"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundHelloOpcode);
    StoreOpcode(CMSG_MOVE_START_SWIM_CHEAT                                     , "CMSG_MOVE_START_SWIM_CHEAT"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MOVE_STOP_SWIM_CHEAT                                      , "CMSG_MOVE_STOP_SWIM_CHEAT"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_FORCE_WALK_SPEED_CHANGE                                   , "SMSG_FORCE_WALK_SPEED_CHANGE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_WALK_SPEED_CHANGE_ACK                               , "CMSG_FORCE_WALK_SPEED_CHANGE_ACK"                                , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(SMSG_FORCE_SWIM_BACK_SPEED_CHANGE                              , "SMSG_FORCE_SWIM_BACK_SPEED_CHANGE"                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_SWIM_BACK_SPEED_CHANGE_ACK                          , "CMSG_FORCE_SWIM_BACK_SPEED_CHANGE_ACK"                           , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(SMSG_FORCE_TURN_RATE_CHANGE                                    , "SMSG_FORCE_TURN_RATE_CHANGE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_FORCE_TURN_RATE_CHANGE_ACK                                , "CMSG_FORCE_TURN_RATE_CHANGE_ACK"                                 , STATUS_LOGGEDIN              , &WorldSession::HandleForceSpeedChangeAck);
    StoreOpcode(MSG_PVP_LOG_DATA                                               , "MSG_PVP_LOG_DATA"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundPVPlogdataOpcode);
    StoreOpcode(CMSG_LEAVE_BATTLEFIELD                                         , "CMSG_LEAVE_BATTLEFIELD"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundLeaveOpcode);
    StoreOpcode(CMSG_AREA_SPIRIT_HEALER_QUERY                                  , "CMSG_AREA_SPIRIT_HEALER_QUERY"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleAreaSpiritHealerQueryOpcode);
    StoreOpcode(CMSG_AREA_SPIRIT_HEALER_QUEUE                                  , "CMSG_AREA_SPIRIT_HEALER_QUEUE"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleAreaSpiritHealerQueueOpcode);
    StoreOpcode(SMSG_AREA_SPIRIT_HEALER_TIME                                   , "SMSG_AREA_SPIRIT_HEALER_TIME"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_UNTEACH                                                , "CMSG_GM_UNTEACH"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_WARDEN_DATA                                               , "SMSG_WARDEN_DATA"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_WARDEN_DATA                                               , "CMSG_WARDEN_DATA"                                                , STATUS_LOGGEDIN              , &WorldSession::HandleWardenDataOpcode);
    StoreOpcode(SMSG_GROUP_JOINED_BATTLEGROUND                                 , "SMSG_GROUP_JOINED_BATTLEGROUND"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_BATTLEGROUND_PLAYER_POSITIONS                              , "MSG_BATTLEGROUND_PLAYER_POSITIONS"                               , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundPlayerPositionsOpcode);
    StoreOpcode(CMSG_PET_STOP_ATTACK                                           , "CMSG_PET_STOP_ATTACK"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_BINDER_CONFIRM                                            , "SMSG_BINDER_CONFIRM"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_BATTLEGROUND_PLAYER_JOINED                                , "SMSG_BATTLEGROUND_PLAYER_JOINED"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_BATTLEGROUND_PLAYER_LEFT                                  , "SMSG_BATTLEGROUND_PLAYER_LEFT"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BATTLEMASTER_JOIN                                         , "CMSG_BATTLEMASTER_JOIN"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundJoinOpcode);
    StoreOpcode(SMSG_ADDON_INFO                                                , "SMSG_ADDON_INFO"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PET_UNLEARN                                               , "CMSG_PET_UNLEARN"                                                , STATUS_LOGGEDIN              , &WorldSession::HandlePetUnlearnOpcode);
    StoreOpcode(SMSG_PET_UNLEARN_CONFIRM                                       , "SMSG_PET_UNLEARN_CONFIRM"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PARTY_MEMBER_STATS_FULL                                   , "SMSG_PARTY_MEMBER_STATS_FULL"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PET_SPELL_AUTOCAST                                        , "CMSG_PET_SPELL_AUTOCAST"                                         , STATUS_LOGGEDIN              , &WorldSession::HandlePetSpellAutocastOpcode);
    StoreOpcode(SMSG_WEATHER                                                   , "SMSG_WEATHER"                                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PLAY_TIME_WARNING                                         , "SMSG_PLAY_TIME_WARNING"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MINIGAME_SETUP                                            , "SMSG_MINIGAME_SETUP"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_MINIGAME_STATE                                            , "SMSG_MINIGAME_STATE"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MINIGAME_MOVE                                             , "CMSG_MINIGAME_MOVE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MINIGAME_MOVE_FAILED                                      , "SMSG_MINIGAME_MOVE_FAILED"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_RAID_INSTANCE_MESSAGE                                     , "SMSG_RAID_INSTANCE_MESSAGE"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COMPRESSED_MOVES                                          , "SMSG_COMPRESSED_MOVES"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GUILD_INFO_TEXT                                           , "CMSG_GUILD_INFO_TEXT"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleGuildChangeInfoOpcode);
    StoreOpcode(SMSG_CHAT_RESTRICTED                                           , "SMSG_CHAT_RESTRICTED"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_RUN_SPEED                                      , "SMSG_SPLINE_SET_RUN_SPEED"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_RUN_BACK_SPEED                                 , "SMSG_SPLINE_SET_RUN_BACK_SPEED"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_SWIM_SPEED                                     , "SMSG_SPLINE_SET_SWIM_SPEED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_WALK_SPEED                                     , "SMSG_SPLINE_SET_WALK_SPEED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_SWIM_BACK_SPEED                                , "SMSG_SPLINE_SET_SWIM_BACK_SPEED"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_SET_TURN_RATE                                      , "SMSG_SPLINE_SET_TURN_RATE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_UNROOT                                        , "SMSG_SPLINE_MOVE_UNROOT"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_FEATHER_FALL                                  , "SMSG_SPLINE_MOVE_FEATHER_FALL"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_NORMAL_FALL                                   , "SMSG_SPLINE_MOVE_NORMAL_FALL"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_SET_HOVER                                     , "SMSG_SPLINE_MOVE_SET_HOVER"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_UNSET_HOVER                                   , "SMSG_SPLINE_MOVE_UNSET_HOVER"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_WATER_WALK                                    , "SMSG_SPLINE_MOVE_WATER_WALK"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_LAND_WALK                                     , "SMSG_SPLINE_MOVE_LAND_WALK"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_START_SWIM                                    , "SMSG_SPLINE_MOVE_START_SWIM"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_STOP_SWIM                                     , "SMSG_SPLINE_MOVE_STOP_SWIM"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_SET_RUN_MODE                                  , "SMSG_SPLINE_MOVE_SET_RUN_MODE"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_SET_WALK_MODE                                 , "SMSG_SPLINE_MOVE_SET_WALK_MODE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_NUKE_ACCOUNT                                           , "CMSG_GM_NUKE_ACCOUNT"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_GM_DESTROY_CORPSE                                          , "MSG_GM_DESTROY_CORPSE"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_DESTROY_ONLINE_CORPSE                                  , "CMSG_GM_DESTROY_ONLINE_CORPSE"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_ACTIVATETAXIEXPRESS                                       , "CMSG_ACTIVATETAXIEXPRESS"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleActivateTaxiFarOpcode);
    StoreOpcode(SMSG_SET_FACTION_ATWAR                                         , "SMSG_SET_FACTION_ATWAR"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GAMETIMEBIAS_SET                                          , "SMSG_GAMETIMEBIAS_SET"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DEBUG_ACTIONS_START                                       , "CMSG_DEBUG_ACTIONS_START"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DEBUG_ACTIONS_STOP                                        , "CMSG_DEBUG_ACTIONS_STOP"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_FACTION_INACTIVE                                      , "CMSG_SET_FACTION_INACTIVE"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleSetWatchedFactionInactiveOpcode);
    StoreOpcode(CMSG_SET_WATCHED_FACTION                                       , "CMSG_SET_WATCHED_FACTION"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleSetWatchedFactionIndexOpcode);
    StoreOpcode(MSG_MOVE_TIME_SKIPPED                                          , "MSG_MOVE_TIME_SKIPPED"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SPLINE_MOVE_ROOT                                          , "SMSG_SPLINE_MOVE_ROOT"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_EXPLORATION_ALL                                       , "CMSG_SET_EXPLORATION_ALL"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_INVALIDATE_PLAYER                                         , "SMSG_INVALIDATE_PLAYER"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_RESET_INSTANCES                                           , "CMSG_RESET_INSTANCES"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleResetInstancesOpcode);
    StoreOpcode(SMSG_INSTANCE_RESET                                            , "SMSG_INSTANCE_RESET"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_INSTANCE_RESET_FAILED                                     , "SMSG_INSTANCE_RESET_FAILED"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_UPDATE_LAST_INSTANCE                                      , "SMSG_UPDATE_LAST_INSTANCE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_RAID_TARGET_UPDATE                                         , "MSG_RAID_TARGET_UPDATE"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleRaidIconTargetOpcode);
    StoreOpcode(MSG_RAID_READY_CHECK                                           , "MSG_RAID_READY_CHECK"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleRaidReadyCheckOpcode);
    StoreOpcode(CMSG_LUA_USAGE                                                 , "CMSG_LUA_USAGE"                                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_PET_ACTION_SOUND                                          , "SMSG_PET_ACTION_SOUND"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PET_DISMISS_SOUND                                         , "SMSG_PET_DISMISS_SOUND"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GHOSTEE_GONE                                              , "SMSG_GHOSTEE_GONE"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_UPDATE_TICKET_STATUS                                   , "CMSG_GM_UPDATE_TICKET_STATUS"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GM_TICKET_STATUS_UPDATE                                   , "SMSG_GM_TICKET_STATUS_UPDATE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GMSURVEY_SUBMIT                                           , "CMSG_GMSURVEY_SUBMIT"                                            , STATUS_LOGGEDIN              , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_UPDATE_INSTANCE_OWNERSHIP                                 , "SMSG_UPDATE_INSTANCE_OWNERSHIP"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_IGNORE_KNOCKBACK_CHEAT                                    , "CMSG_IGNORE_KNOCKBACK_CHEAT"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CHAT_PLAYER_AMBIGUOUS                                     , "SMSG_CHAT_PLAYER_AMBIGUOUS"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_DELAY_GHOST_TELEPORT                                       , "MSG_DELAY_GHOST_TELEPORT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SPELLINSTAKILLLOG                                         , "SMSG_SPELLINSTAKILLLOG"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_UPDATE_CHAIN_TARGETS                                , "SMSG_SPELL_UPDATE_CHAIN_TARGETS"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHAT_FILTERED                                             , "CMSG_CHAT_FILTERED"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_EXPECTED_SPAM_RECORDS                                     , "SMSG_EXPECTED_SPAM_RECORDS"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELLSTEALLOG                                             , "SMSG_SPELLSTEALLOG"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_LOTTERY_QUERY_OBSOLETE                                    , "CMSG_LOTTERY_QUERY_OBSOLETE"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_LOTTERY_QUERY_RESULT_OBSOLETE                             , "SMSG_LOTTERY_QUERY_RESULT_OBSOLETE"                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BUY_LOTTERY_TICKET_OBSOLETE                               , "CMSG_BUY_LOTTERY_TICKET_OBSOLETE"                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_LOTTERY_RESULT_OBSOLETE                                   , "SMSG_LOTTERY_RESULT_OBSOLETE"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHARACTER_PROFILE                                         , "SMSG_CHARACTER_PROFILE"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHARACTER_PROFILE_REALM_CONNECTED                         , "SMSG_CHARACTER_PROFILE_REALM_CONNECTED"                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_DEFENSE_MESSAGE                                           , "SMSG_DEFENSE_MESSAGE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_GM_RESETINSTANCELIMIT                                      , "MSG_GM_RESETINSTANCELIMIT"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MOTD                                                      , "SMSG_MOTD"                                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MOVE_START_SWIM_CHEAT                                      , "MSG_MOVE_START_SWIM_CHEAT"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_STOP_SWIM_CHEAT                                       , "MSG_MOVE_STOP_SWIM_CHEAT"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_MOVE_START_ASCEND                                          , "MSG_MOVE_START_ASCEND"                                           , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_MOVE_STOP_ASCEND                                           , "MSG_MOVE_STOP_ASCEND"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(CMSG_LFG_SET_AUTOJOIN                                          , "CMSG_LFG_SET_AUTOJOIN"                                           , STATUS_AUTHED                , &WorldSession::HandleLfgAutoJoinOpcode);
    StoreOpcode(CMSG_LFG_CLEAR_AUTOJOIN                                        , "CMSG_LFG_CLEAR_AUTOJOIN"                                         , STATUS_LOGGEDIN              , &WorldSession::HandleLfgCancelAutoJoinOpcode);
    StoreOpcode(CMSG_ACCEPT_LFG_MATCH                                          , "CMSG_ACCEPT_LFG_MATCH"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DECLINE_LFG_MATCH                                         , "CMSG_DECLINE_LFG_MATCH"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CANCEL_PENDING_LFG                                        , "CMSG_CANCEL_PENDING_LFG"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CLEAR_LOOKING_FOR_GROUP                                   , "CMSG_CLEAR_LOOKING_FOR_GROUP"                                    , STATUS_LOGGEDIN              , &WorldSession::HandleLfgClearOpcode);
    StoreOpcode(CMSG_SET_LFG_COMMENT                                           , "CMSG_SET_LFG_COMMENT"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleLfgSetCommentOpcode);
    StoreOpcode(SMSG_LFG_TIMEDOUT                                              , "SMSG_LFG_TIMEDOUT"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_OTHER_TIMEDOUT                                        , "SMSG_LFG_OTHER_TIMEDOUT"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_AUTOJOIN_FAILED                                       , "SMSG_LFG_AUTOJOIN_FAILED"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_AUTOJOIN_FAILED_NO_PLAYER                             , "SMSG_LFG_AUTOJOIN_FAILED_NO_PLAYER"                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_LEADER_IS_LFM                                         , "SMSG_LFG_LEADER_IS_LFM"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_UPDATE                                                , "SMSG_LFG_UPDATE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_UPDATE_LFM                                            , "SMSG_LFG_UPDATE_LFM"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_UPDATE_LFG                                            , "SMSG_LFG_UPDATE_LFG"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_UPDATE_QUEUED                                         , "SMSG_LFG_UPDATE_QUEUED"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_PENDING_INVITE                                        , "SMSG_LFG_PENDING_INVITE"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_PENDING_MATCH                                         , "SMSG_LFG_PENDING_MATCH"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_PENDING_MATCH_DONE                                    , "SMSG_LFG_PENDING_MATCH_DONE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TITLE_EARNED                                              , "SMSG_TITLE_EARNED"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_TITLE                                                 , "CMSG_SET_TITLE"                                                  , STATUS_LOGGEDIN              , &WorldSession::HandleChooseTitleOpcode);
    StoreOpcode(CMSG_CANCEL_MOUNT_AURA                                         , "CMSG_CANCEL_MOUNT_AURA"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleDismountOpcode);
    StoreOpcode(SMSG_DEATH_RELEASE_LOC                                         , "SMSG_DEATH_RELEASE_LOC"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CANCEL_TEMP_ENCHANTMENT                                   , "CMSG_CANCEL_TEMP_ENCHANTMENT"                                    , STATUS_LOGGEDIN              , &WorldSession::HandleCancelTempItemEnchantmentOpcode);
    StoreOpcode(SMSG_FORCED_DEATH_UPDATE                                       , "SMSG_FORCED_DEATH_UPDATE"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHEAT_SET_HONOR_CURRENCY                                  , "CMSG_CHEAT_SET_HONOR_CURRENCY"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MAELSTROM_INVALIDATE_CACHE                                , "CMSG_MAELSTROM_INVALIDATE_CACHE"                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_TAXI_BENCHMARK_MODE                                   , "CMSG_SET_TAXI_BENCHMARK_MODE"                                    , STATUS_AUTHED                , &WorldSession::HandleSetTaxiBenchmarkOpcode);
    StoreOpcode(SMSG_JOINED_BATTLEGROUND_QUEUE                                 , "SMSG_JOINED_BATTLEGROUND_QUEUE"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_REALM_SPLIT                                               , "SMSG_REALM_SPLIT"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REALM_SPLIT                                               , "CMSG_REALM_SPLIT"                                                , STATUS_AUTHED                , &WorldSession::HandleRealmStateRequestOpcode);
    StoreOpcode(CMSG_MOVE_CHNG_TRANSPORT                                       , "CMSG_MOVE_CHNG_TRANSPORT"                                        , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(MSG_PARTY_ASSIGNMENT                                           , "MSG_PARTY_ASSIGNMENT"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleGroupPromoteOpcode);
    StoreOpcode(SMSG_OFFER_PETITION_ERROR                                      , "SMSG_OFFER_PETITION_ERROR"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TIME_SYNC_REQ                                             , "SMSG_TIME_SYNC_REQ"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TIME_SYNC_RESP                                            , "CMSG_TIME_SYNC_RESP"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleAllowMoveAckOpcode);
    StoreOpcode(CMSG_SEND_LOCAL_EVENT                                          , "CMSG_SEND_LOCAL_EVENT"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SEND_GENERAL_TRIGGER                                      , "CMSG_SEND_GENERAL_TRIGGER"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SEND_COMBAT_TRIGGER                                       , "CMSG_SEND_COMBAT_TRIGGER"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_MAELSTROM_GM_SENT_MAIL                                    , "CMSG_MAELSTROM_GM_SENT_MAIL"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_RESET_FAILED_NOTIFY                                       , "SMSG_RESET_FAILED_NOTIFY"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_REAL_GROUP_UPDATE                                         , "SMSG_REAL_GROUP_UPDATE"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_LFG_DISABLED                                              , "SMSG_LFG_DISABLED"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ACTIVE_PVP_CHEAT                                          , "CMSG_ACTIVE_PVP_CHEAT"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY                               , "CMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY"                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY_RESPONSE                      , "SMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY_RESPONSE"                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY_RESPONSE_WRITE_FILE           , "SMSG_CHEAT_DUMP_ITEMS_DEBUG_ONLY_RESPONSE_WRITE_FILE"            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_UPDATE_COMBO_POINTS                                       , "SMSG_UPDATE_COMBO_POINTS"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_INIT_EXTRA_AURA_INFO                                      , "SMSG_INIT_EXTRA_AURA_INFO"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_EXTRA_AURA_INFO                                       , "SMSG_SET_EXTRA_AURA_INFO"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SET_EXTRA_AURA_INFO_NEED_UPDATE                           , "SMSG_SET_EXTRA_AURA_INFO_NEED_UPDATE"                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_CLEAR_EXTRA_AURA_INFO                                     , "SMSG_CLEAR_EXTRA_AURA_INFO"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MOVE_START_DESCEND                                         , "MSG_MOVE_START_DESCEND"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleMovementOpcodes);
    StoreOpcode(CMSG_IGNORE_REQUIREMENTS_CHEAT                                 , "CMSG_IGNORE_REQUIREMENTS_CHEAT"                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_IGNORE_REQUIREMENTS_CHEAT                                 , "SMSG_IGNORE_REQUIREMENTS_CHEAT"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_CHANCE_PROC_LOG                                     , "SMSG_SPELL_CHANCE_PROC_LOG"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_MOVE_SET_RUN_SPEED                                        , "CMSG_MOVE_SET_RUN_SPEED"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_DISMOUNT                                                  , "SMSG_DISMOUNT"                                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_MOVE_UPDATE_CAN_FLY                                        , "MSG_MOVE_UPDATE_CAN_FLY"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_RAID_READY_CHECK_CONFIRM                                   , "MSG_RAID_READY_CHECK_CONFIRM"                                    , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_WHISPER                                                , "CMSG_GM_WHISPER"                                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_GM_MESSAGECHAT                                            , "SMSG_GM_MESSAGECHAT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_GM_GEARRATING                                              , "MSG_GM_GEARRATING"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_COMMENTATOR_ENABLE                                        , "CMSG_COMMENTATOR_ENABLE"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_COMMENTATOR_STATE_CHANGED                                 , "SMSG_COMMENTATOR_STATE_CHANGED"                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_COMMENTATOR_GET_MAP_INFO                                  , "CMSG_COMMENTATOR_GET_MAP_INFO"                                   , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_COMMENTATOR_MAP_INFO                                      , "SMSG_COMMENTATOR_MAP_INFO"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_COMMENTATOR_GET_PLAYER_INFO                               , "CMSG_COMMENTATOR_GET_PLAYER_INFO"                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_COMMENTATOR_GET_PLAYER_INFO                               , "SMSG_COMMENTATOR_GET_PLAYER_INFO"                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COMMENTATOR_PLAYER_INFO                                   , "SMSG_COMMENTATOR_PLAYER_INFO"                                    , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_COMMENTATOR_ENTER_INSTANCE                                , "CMSG_COMMENTATOR_ENTER_INSTANCE"                                 , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_COMMENTATOR_EXIT_INSTANCE                                 , "CMSG_COMMENTATOR_EXIT_INSTANCE"                                  , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_COMMENTATOR_INSTANCE_COMMAND                              , "CMSG_COMMENTATOR_INSTANCE_COMMAND"                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CLEAR_TARGET                                              , "SMSG_CLEAR_TARGET"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_BOT_DETECTED                                              , "CMSG_BOT_DETECTED"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CROSSED_INEBRIATION_THRESHOLD                             , "SMSG_CROSSED_INEBRIATION_THRESHOLD"                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CHEAT_PLAYER_LOGIN                                        , "CMSG_CHEAT_PLAYER_LOGIN"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CHEAT_PLAYER_LOOKUP                                       , "CMSG_CHEAT_PLAYER_LOOKUP"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_CHEAT_PLAYER_LOOKUP                                       , "SMSG_CHEAT_PLAYER_LOOKUP"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_KICK_REASON                                               , "SMSG_KICK_REASON"                                                , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(MSG_RAID_READY_CHECK_FINISHED                                  , "MSG_RAID_READY_CHECK_FINISHED"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleRaidReadyCheckFinishOpcode);
    StoreOpcode(CMSG_COMPLAIN                                                  , "CMSG_COMPLAIN"                                                   , STATUS_LOGGEDIN              , &WorldSession::HandleReportSpamOpcode);
    StoreOpcode(SMSG_COMPLAIN_RESULT                                           , "SMSG_COMPLAIN_RESULT"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_FEATURE_SYSTEM_STATUS                                     , "SMSG_FEATURE_SYSTEM_STATUS"                                      , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_SHOW_COMPLAINTS                                        , "CMSG_GM_SHOW_COMPLAINTS"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_UNSQUELCH                                              , "CMSG_GM_UNSQUELCH"                                               , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CHANNEL_SILENCE_ALL                                       , "CMSG_CHANNEL_SILENCE_ALL"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TARGET_CAST                                               , "CMSG_TARGET_CAST"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_TARGET_SCRIPT_CAST                                        , "CMSG_TARGET_SCRIPT_CAST"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CHANNEL_DISPLAY_LIST                                      , "CMSG_CHANNEL_DISPLAY_LIST"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleChannelRosterQuery);
    StoreOpcode(CMSG_GET_CHANNEL_MEMBER_COUNT                                  , "CMSG_GET_CHANNEL_MEMBER_COUNT"                                   , STATUS_LOGGEDIN              , &WorldSession::HandleChannelInfoQuery);
    StoreOpcode(SMSG_CHANNEL_MEMBER_COUNT                                      , "SMSG_CHANNEL_MEMBER_COUNT"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_DEBUG_LIST_TARGETS                                        , "CMSG_DEBUG_LIST_TARGETS"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_DEBUG_LIST_TARGETS                                        , "SMSG_DEBUG_LIST_TARGETS"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_PARTY_SILENCE                                             , "CMSG_PARTY_SILENCE"                                              , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_PARTY_UNSILENCE                                           , "CMSG_PARTY_UNSILENCE"                                            , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_NOTIFY_PARTY_SQUELCH                                       , "MSG_NOTIFY_PARTY_SQUELCH"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_COMSAT_RECONNECT_TRY                                      , "SMSG_COMSAT_RECONNECT_TRY"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COMSAT_DISCONNECT                                         , "SMSG_COMSAT_DISCONNECT"                                          , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_COMSAT_CONNECT_FAIL                                       , "SMSG_COMSAT_CONNECT_FAIL"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_REPORT_PVP_AFK                                            , "CMSG_REPORT_PVP_AFK"                                             , STATUS_LOGGEDIN              , &WorldSession::HandleBattleGroundReportAFK);
    StoreOpcode(CMSG_REPORT_PVP_AFK_RESULT                                     , "CMSG_REPORT_PVP_AFK_RESULT"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_SET_CHANNEL_WATCH                                         , "CMSG_SET_CHANNEL_WATCH"                                          , STATUS_LOGGEDIN              , &WorldSession::HandleChannelJoinNotify);
    StoreOpcode(SMSG_USERLIST_ADD                                              , "SMSG_USERLIST_ADD"                                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_USERLIST_REMOVE                                           , "SMSG_USERLIST_REMOVE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_USERLIST_UPDATE                                           , "SMSG_USERLIST_UPDATE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_CLEAR_CHANNEL_WATCH                                       , "CMSG_CLEAR_CHANNEL_WATCH"                                        , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_INSPECT_TALENT                                            , "SMSG_INSPECT_TALENT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_GOGOGO_OBSOLETE                                           , "SMSG_GOGOGO_OBSOLETE"                                            , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_ECHO_PARTY_SQUELCH                                        , "SMSG_ECHO_PARTY_SQUELCH"                                         , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_TITLE_SUFFIX                                          , "CMSG_SET_TITLE_SUFFIX"                                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_LOOT_LIST                                                 , "SMSG_LOOT_LIST"                                                  , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_GM_CHARACTER_RESTORE                                      , "CMSG_GM_CHARACTER_RESTORE"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GM_CHARACTER_SAVE                                         , "CMSG_GM_CHARACTER_SAVE"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(MSG_GUILD_EVENT_LOG_QUERY                                      , "MSG_GUILD_EVENT_LOG_QUERY"                                       , STATUS_LOGGEDIN              , &WorldSession::HandleGuildEventLogOpcode);
    StoreOpcode(CMSG_MAELSTROM_RENAME_GUILD                                    , "CMSG_MAELSTROM_RENAME_GUILD"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GET_MIRRORIMAGE_DATA                                      , "CMSG_GET_MIRRORIMAGE_DATA"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_MIRRORIMAGE_DATA                                          , "SMSG_MIRRORIMAGE_DATA"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_FORCE_DISPLAY_UPDATE                                      , "SMSG_FORCE_DISPLAY_UPDATE"                                       , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPELL_CHANCE_RESIST_PUSHBACK                              , "SMSG_SPELL_CHANCE_RESIST_PUSHBACK"                               , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_IGNORE_DIMINISHING_RETURNS_CHEAT                          , "CMSG_IGNORE_DIMINISHING_RETURNS_CHEAT"                           , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_IGNORE_DIMINISHING_RETURNS_CHEAT                          , "SMSG_IGNORE_DIMINISHING_RETURNS_CHEAT"                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_KEEP_ALIVE                                                , "CMSG_KEEP_ALIVE"                                                 , STATUS_NEVER                 , &WorldSession::Handle_EarlyProccess);
    StoreOpcode(SMSG_RAID_READY_CHECK_ERROR                                    , "SMSG_RAID_READY_CHECK_ERROR"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_OPT_OUT_OF_LOOT                                           , "CMSG_OPT_OUT_OF_LOOT"                                            , STATUS_AUTHED                , &WorldSession::HandleGroupPassOnLootOpcode);
    StoreOpcode(CMSG_SET_GRANTABLE_LEVELS                                      , "CMSG_SET_GRANTABLE_LEVELS"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_GRANT_LEVEL                                               , "CMSG_GRANT_LEVEL"                                                , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_REFER_A_FRIEND                                            , "CMSG_REFER_A_FRIEND"                                             , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_DECLINE_CHANNEL_INVITE                                    , "CMSG_DECLINE_CHANNEL_INVITE"                                     , STATUS_LOGGEDIN              , &WorldSession::HandleChannelDeclineInvite);
    StoreOpcode(CMSG_GROUPACTION_THROTTLED                                     , "CMSG_GROUPACTION_THROTTLED"                                      , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_OVERRIDE_LIGHT                                            , "SMSG_OVERRIDE_LIGHT"                                             , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_TOTEM_CREATED                                             , "SMSG_TOTEM_CREATED"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_TOTEM_DESTROYED                                           , "CMSG_TOTEM_DESTROYED"                                            , STATUS_LOGGEDIN              , &WorldSession::HandleTotemDestroy);
    StoreOpcode(CMSG_EXPIRE_RAID_INSTANCE                                      , "CMSG_EXPIRE_RAID_INSTANCE"                                       , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_NO_SPELL_VARIANCE                                         , "CMSG_NO_SPELL_VARIANCE"                                          , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_QUESTGIVER_STATUS_MULTIPLE_QUERY                          , "CMSG_QUESTGIVER_STATUS_MULTIPLE_QUERY"                           , STATUS_LOGGEDIN              , &WorldSession::HandleQuestgiverStatusQueryMultipleOpcode);
    StoreOpcode(SMSG_QUESTGIVER_STATUS_MULTIPLE                                , "SMSG_QUESTGIVER_STATUS_MULTIPLE"                                 , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_SET_PLAYER_DECLINED_NAMES                                 , "CMSG_SET_PLAYER_DECLINED_NAMES"                                  , STATUS_AUTHED                , &WorldSession::HandleDeclinedPlayerNameOpcode);
    StoreOpcode(SMSG_SET_PLAYER_DECLINED_NAMES_RESULT                          , "SMSG_SET_PLAYER_DECLINED_NAMES_RESULT"                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_QUERY_SERVER_BUCK_DATA                                    , "CMSG_QUERY_SERVER_BUCK_DATA"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(CMSG_CLEAR_SERVER_BUCK_DATA                                    , "CMSG_CLEAR_SERVER_BUCK_DATA"                                     , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_SERVER_BUCK_DATA                                          , "SMSG_SERVER_BUCK_DATA"                                           , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SEND_UNLEARN_SPELLS                                       , "SMSG_SEND_UNLEARN_SPELLS"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_PROPOSE_LEVEL_GRANT                                       , "SMSG_PROPOSE_LEVEL_GRANT"                                        , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(CMSG_ACCEPT_LEVEL_GRANT                                        , "CMSG_ACCEPT_LEVEL_GRANT"                                         , STATUS_NEVER                 , &WorldSession::Handle_NULL);
    StoreOpcode(SMSG_REFER_A_FRIEND_FAILURE                                    , "SMSG_REFER_A_FRIEND_FAILURE"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_SET_FLYING                                    , "SMSG_SPLINE_MOVE_SET_FLYING"                                     , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SPLINE_MOVE_UNSET_FLYING                                  , "SMSG_SPLINE_MOVE_UNSET_FLYING"                                   , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);
    StoreOpcode(SMSG_SUMMON_CANCEL                                             , "SMSG_SUMMON_CANCEL"                                              , STATUS_NEVER                 , &WorldSession::Handle_ServerSide);

  return;
}